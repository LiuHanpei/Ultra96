// ==============================================================
// Generated by Vitis HLS v2023.2.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_func_main_func_Pipeline_VITIS_LOOP_22_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        B_local_4_address0,
        B_local_4_ce0,
        B_local_4_we0,
        B_local_4_d0,
        B_local_3_address0,
        B_local_3_ce0,
        B_local_3_we0,
        B_local_3_d0,
        B_local_2_address0,
        B_local_2_ce0,
        B_local_2_we0,
        B_local_2_d0,
        B_local_1_address0,
        B_local_1_ce0,
        B_local_1_we0,
        B_local_1_d0,
        B_local_address0,
        B_local_ce0,
        B_local_we0,
        B_local_d0,
        A_local_address0,
        A_local_ce0,
        A_local_q0,
        A_local_1_address0,
        A_local_1_ce0,
        A_local_1_q0,
        A_local_2_address0,
        A_local_2_ce0,
        A_local_2_q0,
        A_local_3_address0,
        A_local_3_ce0,
        A_local_3_q0,
        A_local_4_address0,
        A_local_4_ce0,
        A_local_4_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] B_local_4_address0;
output   B_local_4_ce0;
output   B_local_4_we0;
output  [15:0] B_local_4_d0;
output  [3:0] B_local_3_address0;
output   B_local_3_ce0;
output   B_local_3_we0;
output  [15:0] B_local_3_d0;
output  [3:0] B_local_2_address0;
output   B_local_2_ce0;
output   B_local_2_we0;
output  [15:0] B_local_2_d0;
output  [3:0] B_local_1_address0;
output   B_local_1_ce0;
output   B_local_1_we0;
output  [15:0] B_local_1_d0;
output  [3:0] B_local_address0;
output   B_local_ce0;
output   B_local_we0;
output  [15:0] B_local_d0;
output  [3:0] A_local_address0;
output   A_local_ce0;
input  [15:0] A_local_q0;
output  [3:0] A_local_1_address0;
output   A_local_1_ce0;
input  [15:0] A_local_1_q0;
output  [3:0] A_local_2_address0;
output   A_local_2_ce0;
input  [15:0] A_local_2_q0;
output  [3:0] A_local_3_address0;
output   A_local_3_ce0;
input  [15:0] A_local_3_q0;
output  [3:0] A_local_4_address0;
output   A_local_4_ce0;
input  [15:0] A_local_4_q0;

reg ap_idle;
reg B_local_4_ce0;
reg B_local_4_we0;
reg B_local_3_ce0;
reg B_local_3_we0;
reg B_local_2_ce0;
reg B_local_2_we0;
reg B_local_1_ce0;
reg B_local_1_we0;
reg B_local_ce0;
reg B_local_we0;
reg A_local_ce0;
reg A_local_1_ce0;
reg A_local_2_ce0;
reg A_local_3_ce0;
reg A_local_4_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln22_fu_230_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] trunc_ln22_fu_275_p1;
reg   [2:0] trunc_ln22_reg_370;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] B_local_addr_reg_400;
reg   [3:0] B_local_1_addr_reg_405;
reg   [3:0] B_local_2_addr_reg_410;
reg   [3:0] B_local_3_addr_reg_415;
reg   [3:0] B_local_4_addr_reg_420;
wire   [63:0] zext_ln22_fu_261_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] phi_urem_fu_72;
wire   [5:0] select_ln22_fu_291_p3;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_phi_urem_load;
reg   [12:0] phi_mul_fu_76;
wire   [12:0] add_ln22_1_fu_245_p2;
reg   [12:0] ap_sig_allocacmp_phi_mul_load;
reg   [5:0] j_fu_80;
wire   [5:0] add_ln22_fu_236_p2;
reg   [5:0] ap_sig_allocacmp_j_1;
wire   [15:0] tmp_s_fu_314_p13;
wire   [3:0] tmp_fu_251_p4;
wire   [5:0] add_ln22_2_fu_279_p2;
wire   [0:0] icmp_ln22_1_fu_285_p2;
wire   [15:0] tmp_s_fu_314_p11;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [2:0] tmp_s_fu_314_p1;
wire   [2:0] tmp_s_fu_314_p3;
wire   [2:0] tmp_s_fu_314_p5;
wire   [2:0] tmp_s_fu_314_p7;
wire  signed [2:0] tmp_s_fu_314_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 phi_urem_fu_72 = 6'd0;
#0 phi_mul_fu_76 = 13'd0;
#0 j_fu_80 = 6'd0;
#0 ap_done_reg = 1'b0;
end

main_func_sparsemux_11_3_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 16 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 16 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
sparsemux_11_3_16_1_1_U8(
    .din0(A_local_q0),
    .din1(A_local_1_q0),
    .din2(A_local_2_q0),
    .din3(A_local_3_q0),
    .din4(A_local_4_q0),
    .def(tmp_s_fu_314_p11),
    .sel(trunc_ln22_reg_370),
    .dout(tmp_s_fu_314_p13)
);

main_func_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln22_fu_230_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_80 <= add_ln22_fu_236_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_80 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln22_fu_230_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_mul_fu_76 <= add_ln22_1_fu_245_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_76 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln22_fu_230_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_urem_fu_72 <= select_ln22_fu_291_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_72 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_1_addr_reg_405 <= zext_ln22_fu_261_p1;
        B_local_2_addr_reg_410 <= zext_ln22_fu_261_p1;
        B_local_3_addr_reg_415 <= zext_ln22_fu_261_p1;
        B_local_4_addr_reg_420 <= zext_ln22_fu_261_p1;
        B_local_addr_reg_400 <= zext_ln22_fu_261_p1;
        trunc_ln22_reg_370 <= trunc_ln22_fu_275_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_local_1_ce0 = 1'b1;
    end else begin
        A_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_local_2_ce0 = 1'b1;
    end else begin
        A_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_local_3_ce0 = 1'b1;
    end else begin
        A_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_local_4_ce0 = 1'b1;
    end else begin
        A_local_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_local_ce0 = 1'b1;
    end else begin
        A_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_1_ce0 = 1'b1;
    end else begin
        B_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln22_reg_370 == 3'd1))) begin
        B_local_1_we0 = 1'b1;
    end else begin
        B_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_2_ce0 = 1'b1;
    end else begin
        B_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln22_reg_370 == 3'd2))) begin
        B_local_2_we0 = 1'b1;
    end else begin
        B_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_3_ce0 = 1'b1;
    end else begin
        B_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln22_reg_370 == 3'd3))) begin
        B_local_3_we0 = 1'b1;
    end else begin
        B_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_4_ce0 = 1'b1;
    end else begin
        B_local_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln22_reg_370 == 3'd0) & ~(trunc_ln22_reg_370 == 3'd1) & ~(trunc_ln22_reg_370 == 3'd2) & ~(trunc_ln22_reg_370 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_4_we0 = 1'b1;
    end else begin
        B_local_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_local_ce0 = 1'b1;
    end else begin
        B_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln22_reg_370 == 3'd0))) begin
        B_local_we0 = 1'b1;
    end else begin
        B_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_230_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_mul_load = 13'd0;
    end else begin
        ap_sig_allocacmp_phi_mul_load = phi_mul_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_urem_load = 6'd0;
    end else begin
        ap_sig_allocacmp_phi_urem_load = phi_urem_fu_72;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_local_1_address0 = zext_ln22_fu_261_p1;

assign A_local_2_address0 = zext_ln22_fu_261_p1;

assign A_local_3_address0 = zext_ln22_fu_261_p1;

assign A_local_4_address0 = zext_ln22_fu_261_p1;

assign A_local_address0 = zext_ln22_fu_261_p1;

assign B_local_1_address0 = B_local_1_addr_reg_405;

assign B_local_1_d0 = tmp_s_fu_314_p13;

assign B_local_2_address0 = B_local_2_addr_reg_410;

assign B_local_2_d0 = tmp_s_fu_314_p13;

assign B_local_3_address0 = B_local_3_addr_reg_415;

assign B_local_3_d0 = tmp_s_fu_314_p13;

assign B_local_4_address0 = B_local_4_addr_reg_420;

assign B_local_4_d0 = tmp_s_fu_314_p13;

assign B_local_address0 = B_local_addr_reg_400;

assign B_local_d0 = tmp_s_fu_314_p13;

assign add_ln22_1_fu_245_p2 = (ap_sig_allocacmp_phi_mul_load + 13'd103);

assign add_ln22_2_fu_279_p2 = (ap_sig_allocacmp_phi_urem_load + 6'd1);

assign add_ln22_fu_236_p2 = (ap_sig_allocacmp_j_1 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln22_1_fu_285_p2 = ((add_ln22_2_fu_279_p2 < 6'd5) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_230_p2 = ((ap_sig_allocacmp_j_1 == 6'd50) ? 1'b1 : 1'b0);

assign select_ln22_fu_291_p3 = ((icmp_ln22_1_fu_285_p2[0:0] == 1'b1) ? add_ln22_2_fu_279_p2 : 6'd0);

assign tmp_fu_251_p4 = {{ap_sig_allocacmp_phi_mul_load[12:9]}};

assign tmp_s_fu_314_p11 = 'bx;

assign trunc_ln22_fu_275_p1 = ap_sig_allocacmp_phi_urem_load[2:0];

assign zext_ln22_fu_261_p1 = tmp_fu_251_p4;

endmodule //main_func_main_func_Pipeline_VITIS_LOOP_22_3
