// ==============================================================
// Generated by Vitis HLS v2023.2.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_func_main_func_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fm_AWVALID,
        m_axi_fm_AWREADY,
        m_axi_fm_AWADDR,
        m_axi_fm_AWID,
        m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT,
        m_axi_fm_AWQOS,
        m_axi_fm_AWREGION,
        m_axi_fm_AWUSER,
        m_axi_fm_WVALID,
        m_axi_fm_WREADY,
        m_axi_fm_WDATA,
        m_axi_fm_WSTRB,
        m_axi_fm_WLAST,
        m_axi_fm_WID,
        m_axi_fm_WUSER,
        m_axi_fm_ARVALID,
        m_axi_fm_ARREADY,
        m_axi_fm_ARADDR,
        m_axi_fm_ARID,
        m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT,
        m_axi_fm_ARQOS,
        m_axi_fm_ARREGION,
        m_axi_fm_ARUSER,
        m_axi_fm_RVALID,
        m_axi_fm_RREADY,
        m_axi_fm_RDATA,
        m_axi_fm_RLAST,
        m_axi_fm_RID,
        m_axi_fm_RFIFONUM,
        m_axi_fm_RUSER,
        m_axi_fm_RRESP,
        m_axi_fm_BVALID,
        m_axi_fm_BREADY,
        m_axi_fm_BRESP,
        m_axi_fm_BID,
        m_axi_fm_BUSER,
        empty,
        zext_ln43,
        input_feature_map,
        inBuffer3x3_0_0_address0,
        inBuffer3x3_0_0_ce0,
        inBuffer3x3_0_0_we0,
        inBuffer3x3_0_0_d0,
        inBuffer3x3_0_0_address1,
        inBuffer3x3_0_0_ce1,
        inBuffer3x3_0_0_we1,
        inBuffer3x3_0_0_d1,
        inBuffer3x3_0_1_address0,
        inBuffer3x3_0_1_ce0,
        inBuffer3x3_0_1_we0,
        inBuffer3x3_0_1_d0,
        inBuffer3x3_0_1_address1,
        inBuffer3x3_0_1_ce1,
        inBuffer3x3_0_1_we1,
        inBuffer3x3_0_1_d1,
        inBuffer3x3_0_2_address0,
        inBuffer3x3_0_2_ce0,
        inBuffer3x3_0_2_we0,
        inBuffer3x3_0_2_d0,
        inBuffer3x3_0_2_address1,
        inBuffer3x3_0_2_ce1,
        inBuffer3x3_0_2_we1,
        inBuffer3x3_0_2_d1,
        inBuffer3x3_1_0_address0,
        inBuffer3x3_1_0_ce0,
        inBuffer3x3_1_0_we0,
        inBuffer3x3_1_0_d0,
        inBuffer3x3_1_0_address1,
        inBuffer3x3_1_0_ce1,
        inBuffer3x3_1_0_we1,
        inBuffer3x3_1_0_d1,
        inBuffer3x3_1_1_address0,
        inBuffer3x3_1_1_ce0,
        inBuffer3x3_1_1_we0,
        inBuffer3x3_1_1_d0,
        inBuffer3x3_1_1_address1,
        inBuffer3x3_1_1_ce1,
        inBuffer3x3_1_1_we1,
        inBuffer3x3_1_1_d1,
        inBuffer3x3_1_2_address0,
        inBuffer3x3_1_2_ce0,
        inBuffer3x3_1_2_we0,
        inBuffer3x3_1_2_d0,
        inBuffer3x3_1_2_address1,
        inBuffer3x3_1_2_ce1,
        inBuffer3x3_1_2_we1,
        inBuffer3x3_1_2_d1,
        inBuffer3x3_2_0_address0,
        inBuffer3x3_2_0_ce0,
        inBuffer3x3_2_0_we0,
        inBuffer3x3_2_0_d0,
        inBuffer3x3_2_0_address1,
        inBuffer3x3_2_0_ce1,
        inBuffer3x3_2_0_we1,
        inBuffer3x3_2_0_d1,
        inBuffer3x3_2_1_address0,
        inBuffer3x3_2_1_ce0,
        inBuffer3x3_2_1_we0,
        inBuffer3x3_2_1_d0,
        inBuffer3x3_2_1_address1,
        inBuffer3x3_2_1_ce1,
        inBuffer3x3_2_1_we1,
        inBuffer3x3_2_1_d1,
        inBuffer3x3_2_2_address0,
        inBuffer3x3_2_2_ce0,
        inBuffer3x3_2_2_we0,
        inBuffer3x3_2_2_d0,
        inBuffer3x3_2_2_address1,
        inBuffer3x3_2_2_ce1,
        inBuffer3x3_2_2_we1,
        inBuffer3x3_2_2_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fm_AWVALID;
input   m_axi_fm_AWREADY;
output  [63:0] m_axi_fm_AWADDR;
output  [0:0] m_axi_fm_AWID;
output  [31:0] m_axi_fm_AWLEN;
output  [2:0] m_axi_fm_AWSIZE;
output  [1:0] m_axi_fm_AWBURST;
output  [1:0] m_axi_fm_AWLOCK;
output  [3:0] m_axi_fm_AWCACHE;
output  [2:0] m_axi_fm_AWPROT;
output  [3:0] m_axi_fm_AWQOS;
output  [3:0] m_axi_fm_AWREGION;
output  [0:0] m_axi_fm_AWUSER;
output   m_axi_fm_WVALID;
input   m_axi_fm_WREADY;
output  [15:0] m_axi_fm_WDATA;
output  [1:0] m_axi_fm_WSTRB;
output   m_axi_fm_WLAST;
output  [0:0] m_axi_fm_WID;
output  [0:0] m_axi_fm_WUSER;
output   m_axi_fm_ARVALID;
input   m_axi_fm_ARREADY;
output  [63:0] m_axi_fm_ARADDR;
output  [0:0] m_axi_fm_ARID;
output  [31:0] m_axi_fm_ARLEN;
output  [2:0] m_axi_fm_ARSIZE;
output  [1:0] m_axi_fm_ARBURST;
output  [1:0] m_axi_fm_ARLOCK;
output  [3:0] m_axi_fm_ARCACHE;
output  [2:0] m_axi_fm_ARPROT;
output  [3:0] m_axi_fm_ARQOS;
output  [3:0] m_axi_fm_ARREGION;
output  [0:0] m_axi_fm_ARUSER;
input   m_axi_fm_RVALID;
output   m_axi_fm_RREADY;
input  [15:0] m_axi_fm_RDATA;
input   m_axi_fm_RLAST;
input  [0:0] m_axi_fm_RID;
input  [9:0] m_axi_fm_RFIFONUM;
input  [0:0] m_axi_fm_RUSER;
input  [1:0] m_axi_fm_RRESP;
input   m_axi_fm_BVALID;
output   m_axi_fm_BREADY;
input  [1:0] m_axi_fm_BRESP;
input  [0:0] m_axi_fm_BID;
input  [0:0] m_axi_fm_BUSER;
input  [1:0] empty;
input  [7:0] zext_ln43;
input  [63:0] input_feature_map;
output  [10:0] inBuffer3x3_0_0_address0;
output   inBuffer3x3_0_0_ce0;
output   inBuffer3x3_0_0_we0;
output  [15:0] inBuffer3x3_0_0_d0;
output  [10:0] inBuffer3x3_0_0_address1;
output   inBuffer3x3_0_0_ce1;
output   inBuffer3x3_0_0_we1;
output  [15:0] inBuffer3x3_0_0_d1;
output  [10:0] inBuffer3x3_0_1_address0;
output   inBuffer3x3_0_1_ce0;
output   inBuffer3x3_0_1_we0;
output  [15:0] inBuffer3x3_0_1_d0;
output  [10:0] inBuffer3x3_0_1_address1;
output   inBuffer3x3_0_1_ce1;
output   inBuffer3x3_0_1_we1;
output  [15:0] inBuffer3x3_0_1_d1;
output  [10:0] inBuffer3x3_0_2_address0;
output   inBuffer3x3_0_2_ce0;
output   inBuffer3x3_0_2_we0;
output  [15:0] inBuffer3x3_0_2_d0;
output  [10:0] inBuffer3x3_0_2_address1;
output   inBuffer3x3_0_2_ce1;
output   inBuffer3x3_0_2_we1;
output  [15:0] inBuffer3x3_0_2_d1;
output  [10:0] inBuffer3x3_1_0_address0;
output   inBuffer3x3_1_0_ce0;
output   inBuffer3x3_1_0_we0;
output  [15:0] inBuffer3x3_1_0_d0;
output  [10:0] inBuffer3x3_1_0_address1;
output   inBuffer3x3_1_0_ce1;
output   inBuffer3x3_1_0_we1;
output  [15:0] inBuffer3x3_1_0_d1;
output  [10:0] inBuffer3x3_1_1_address0;
output   inBuffer3x3_1_1_ce0;
output   inBuffer3x3_1_1_we0;
output  [15:0] inBuffer3x3_1_1_d0;
output  [10:0] inBuffer3x3_1_1_address1;
output   inBuffer3x3_1_1_ce1;
output   inBuffer3x3_1_1_we1;
output  [15:0] inBuffer3x3_1_1_d1;
output  [10:0] inBuffer3x3_1_2_address0;
output   inBuffer3x3_1_2_ce0;
output   inBuffer3x3_1_2_we0;
output  [15:0] inBuffer3x3_1_2_d0;
output  [10:0] inBuffer3x3_1_2_address1;
output   inBuffer3x3_1_2_ce1;
output   inBuffer3x3_1_2_we1;
output  [15:0] inBuffer3x3_1_2_d1;
output  [10:0] inBuffer3x3_2_0_address0;
output   inBuffer3x3_2_0_ce0;
output   inBuffer3x3_2_0_we0;
output  [15:0] inBuffer3x3_2_0_d0;
output  [10:0] inBuffer3x3_2_0_address1;
output   inBuffer3x3_2_0_ce1;
output   inBuffer3x3_2_0_we1;
output  [15:0] inBuffer3x3_2_0_d1;
output  [10:0] inBuffer3x3_2_1_address0;
output   inBuffer3x3_2_1_ce0;
output   inBuffer3x3_2_1_we0;
output  [15:0] inBuffer3x3_2_1_d0;
output  [10:0] inBuffer3x3_2_1_address1;
output   inBuffer3x3_2_1_ce1;
output   inBuffer3x3_2_1_we1;
output  [15:0] inBuffer3x3_2_1_d1;
output  [10:0] inBuffer3x3_2_2_address0;
output   inBuffer3x3_2_2_ce0;
output   inBuffer3x3_2_2_we0;
output  [15:0] inBuffer3x3_2_2_d0;
output  [10:0] inBuffer3x3_2_2_address1;
output   inBuffer3x3_2_2_ce1;
output   inBuffer3x3_2_2_we1;
output  [15:0] inBuffer3x3_2_2_d1;

reg ap_idle;
reg m_axi_fm_ARVALID;
reg m_axi_fm_RREADY;
reg inBuffer3x3_0_0_ce0;
reg inBuffer3x3_0_0_we0;
reg inBuffer3x3_0_0_ce1;
reg inBuffer3x3_0_0_we1;
reg inBuffer3x3_0_1_ce0;
reg inBuffer3x3_0_1_we0;
reg inBuffer3x3_0_1_ce1;
reg inBuffer3x3_0_1_we1;
reg inBuffer3x3_0_2_ce0;
reg inBuffer3x3_0_2_we0;
reg inBuffer3x3_0_2_ce1;
reg inBuffer3x3_0_2_we1;
reg inBuffer3x3_1_0_ce0;
reg inBuffer3x3_1_0_we0;
reg inBuffer3x3_1_0_ce1;
reg inBuffer3x3_1_0_we1;
reg inBuffer3x3_1_1_ce0;
reg inBuffer3x3_1_1_we0;
reg inBuffer3x3_1_1_ce1;
reg inBuffer3x3_1_1_we1;
reg inBuffer3x3_1_2_ce0;
reg inBuffer3x3_1_2_we0;
reg inBuffer3x3_1_2_ce1;
reg inBuffer3x3_1_2_we1;
reg inBuffer3x3_2_0_ce0;
reg inBuffer3x3_2_0_we0;
reg inBuffer3x3_2_0_ce1;
reg inBuffer3x3_2_0_we1;
reg inBuffer3x3_2_1_ce0;
reg inBuffer3x3_2_1_we0;
reg inBuffer3x3_2_1_ce1;
reg inBuffer3x3_2_1_we1;
reg inBuffer3x3_2_2_ce0;
reg inBuffer3x3_2_2_we0;
reg inBuffer3x3_2_2_ce1;
reg inBuffer3x3_2_2_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
reg   [0:0] or_ln49_reg_959;
reg    ap_block_state6_io;
reg   [0:0] or_ln49_reg_959_pp0_iter12_reg;
reg    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln43_fu_405_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fm_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    fm_blk_n_R;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] zext_ln43_cast_fu_370_p1;
reg   [9:0] zext_ln43_cast_reg_894;
wire   [0:0] icmp_ln44_fu_429_p2;
reg   [0:0] icmp_ln44_reg_903;
wire   [0:0] and_ln43_fu_447_p2;
reg   [0:0] and_ln43_reg_908;
wire   [1:0] select_ln43_1_fu_453_p3;
reg   [1:0] select_ln43_1_reg_913;
reg   [1:0] select_ln43_1_reg_913_pp0_iter2_reg;
reg   [1:0] select_ln43_1_reg_913_pp0_iter3_reg;
wire   [6:0] select_ln44_fu_467_p3;
reg   [6:0] select_ln44_reg_919;
reg   [6:0] select_ln44_reg_919_pp0_iter2_reg;
reg   [6:0] select_ln44_reg_919_pp0_iter3_reg;
wire   [5:0] select_ln44_1_fu_541_p3;
reg   [5:0] select_ln44_1_reg_931;
reg   [4:0] tmp_9_reg_938;
wire   [8:0] empty_36_fu_603_p2;
reg   [8:0] empty_36_reg_943;
wire   [10:0] add_ln50_1_fu_739_p2;
reg   [10:0] add_ln50_1_reg_954;
reg   [10:0] add_ln50_1_reg_954_pp0_iter5_reg;
reg   [10:0] add_ln50_1_reg_954_pp0_iter6_reg;
reg   [10:0] add_ln50_1_reg_954_pp0_iter7_reg;
reg   [10:0] add_ln50_1_reg_954_pp0_iter8_reg;
reg   [10:0] add_ln50_1_reg_954_pp0_iter9_reg;
reg   [10:0] add_ln50_1_reg_954_pp0_iter10_reg;
wire   [0:0] or_ln49_fu_770_p2;
reg   [0:0] or_ln49_reg_959_pp0_iter5_reg;
reg   [0:0] or_ln49_reg_959_pp0_iter6_reg;
reg   [0:0] or_ln49_reg_959_pp0_iter7_reg;
reg   [0:0] or_ln49_reg_959_pp0_iter8_reg;
reg   [0:0] or_ln49_reg_959_pp0_iter9_reg;
reg   [0:0] or_ln49_reg_959_pp0_iter10_reg;
reg   [0:0] or_ln49_reg_959_pp0_iter11_reg;
reg   [63:0] fm_addr_reg_963;
wire   [1:0] trunc_ln44_fu_819_p1;
reg   [1:0] trunc_ln44_reg_969;
reg   [1:0] trunc_ln44_reg_969_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_0_0_addr_reg_973;
reg   [10:0] inBuffer3x3_0_0_addr_reg_973_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_0_0_addr_reg_973_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_0_1_addr_reg_978;
reg   [10:0] inBuffer3x3_0_1_addr_reg_978_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_0_1_addr_reg_978_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_0_2_addr_reg_983;
reg   [10:0] inBuffer3x3_0_2_addr_reg_983_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_0_2_addr_reg_983_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_1_0_addr_reg_988;
reg   [10:0] inBuffer3x3_1_0_addr_reg_988_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_1_0_addr_reg_988_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_1_1_addr_reg_993;
reg   [10:0] inBuffer3x3_1_1_addr_reg_993_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_1_1_addr_reg_993_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_1_2_addr_reg_998;
reg   [10:0] inBuffer3x3_1_2_addr_reg_998_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_1_2_addr_reg_998_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_2_0_addr_reg_1003;
reg   [10:0] inBuffer3x3_2_0_addr_reg_1003_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_2_0_addr_reg_1003_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_2_1_addr_reg_1008;
reg   [10:0] inBuffer3x3_2_1_addr_reg_1008_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_2_1_addr_reg_1008_pp0_iter13_reg;
reg   [10:0] inBuffer3x3_2_2_addr_reg_1013;
reg   [10:0] inBuffer3x3_2_2_addr_reg_1013_pp0_iter12_reg;
reg   [10:0] inBuffer3x3_2_2_addr_reg_1013_pp0_iter13_reg;
wire   [1:0] trunc_ln45_fu_835_p1;
reg   [1:0] trunc_ln45_reg_1018;
reg   [1:0] trunc_ln45_reg_1018_pp0_iter12_reg;
reg   [15:0] fm_addr_read_reg_1022;
wire   [63:0] zext_ln50_4_fu_823_p1;
wire  signed [63:0] sext_ln53_fu_809_p1;
reg   [6:0] w_fu_158;
wire   [6:0] add_ln45_fu_485_p2;
wire    ap_loop_init;
reg   [5:0] h_fu_162;
reg   [12:0] indvar_flatten24_fu_166;
wire   [12:0] select_ln44_2_fu_497_p3;
reg   [1:0] c_fu_170;
reg   [13:0] indvar_flatten37_fu_174;
wire   [13:0] add_ln43_1_fu_411_p2;
reg    ap_predicate_pred504_state15;
reg    ap_predicate_pred513_state15;
reg    ap_predicate_pred525_state15;
reg    ap_predicate_pred535_state15;
reg    ap_predicate_pred541_state15;
reg    ap_predicate_pred549_state15;
reg    ap_predicate_pred563_state15;
reg    ap_predicate_pred569_state15;
reg    ap_predicate_pred577_state15;
wire   [0:0] icmp_ln45_fu_441_p2;
wire   [0:0] xor_ln43_fu_435_p2;
wire   [1:0] add_ln43_fu_423_p2;
wire   [0:0] or_ln44_fu_461_p2;
wire   [2:0] grp_fu_479_p1;
wire   [12:0] add_ln44_1_fu_491_p2;
wire   [5:0] select_ln43_fu_528_p3;
wire   [5:0] add_ln44_fu_535_p2;
wire   [5:0] grp_fu_548_p0;
wire   [2:0] grp_fu_548_p1;
wire   [5:0] mul_ln44_fu_565_p0;
wire   [7:0] mul_ln44_fu_565_p1;
wire   [12:0] mul_ln44_fu_565_p2;
wire   [6:0] tmp2_fu_581_p4;
wire   [6:0] zext_ln44_fu_559_p1;
wire   [6:0] tmp3_fu_593_p2;
wire  signed [8:0] tmp3_cast_fu_599_p1;
wire   [8:0] tmp2_cast_fu_589_p1;
wire  signed [14:0] p_shl5_fu_609_p3;
wire   [5:0] tmp_s_fu_621_p3;
wire   [2:0] tmp_7_fu_632_p3;
wire   [6:0] zext_ln50_fu_628_p1;
wire   [6:0] zext_ln50_1_fu_639_p1;
wire   [6:0] sub_ln50_fu_643_p2;
wire  signed [7:0] sext_ln43_fu_649_p1;
wire   [7:0] zext_ln50_2_fu_653_p1;
wire   [7:0] add_ln50_fu_656_p2;
wire   [5:0] trunc_ln50_fu_662_p1;
wire   [9:0] tmp_11_fu_674_p3;
wire   [10:0] tmp_10_fu_666_p3;
wire  signed [10:0] sext_ln50_fu_682_p1;
wire   [16:0] p_shl4_fu_692_p3;
wire  signed [17:0] grp_fu_839_p3;
wire  signed [17:0] p_shl4_cast_fu_699_p1;
wire   [6:0] mul_ln45_fu_719_p0;
wire   [8:0] mul_ln45_fu_719_p1;
wire   [14:0] mul_ln45_fu_719_p2;
wire   [5:0] tmp_12_fu_725_p4;
wire   [10:0] sub_ln50_1_fu_686_p2;
wire   [10:0] zext_ln50_3_fu_735_p1;
wire   [7:0] zext_ln45_fu_713_p1;
wire   [7:0] add_ln47_fu_745_p2;
wire  signed [9:0] sext_ln47_fu_751_p1;
wire  signed [9:0] add_ln47_1_fu_755_p2;
wire   [0:0] icmp_ln49_fu_764_p2;
wire   [0:0] empty_37_fu_708_p2;
(* use_dsp48 = "no" *) wire   [17:0] add_ln48_fu_703_p2;
wire  signed [17:0] sext_ln49_fu_760_p1;
wire   [17:0] add_ln53_1_fu_776_p2;
wire   [18:0] shl_ln_fu_782_p3;
wire   [63:0] zext_ln53_fu_790_p1;
wire   [63:0] add_ln53_fu_794_p2;
wire   [62:0] trunc_ln6_fu_799_p4;
wire   [1:0] grp_fu_548_p2;
wire   [1:0] grp_fu_479_p2;
wire   [1:0] grp_fu_839_p0;
wire   [15:0] grp_fu_839_p1;
reg    grp_fu_479_ce;
reg    grp_fu_548_ce;
reg    grp_fu_839_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [17:0] grp_fu_839_p00;
wire   [12:0] mul_ln44_fu_565_p00;
wire   [14:0] mul_ln45_fu_719_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 w_fu_158 = 7'd0;
#0 h_fu_162 = 6'd0;
#0 indvar_flatten24_fu_166 = 13'd0;
#0 c_fu_170 = 2'd0;
#0 indvar_flatten37_fu_174 = 14'd0;
#0 ap_done_reg = 1'b0;
end

main_func_urem_7ns_3ns_2_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_7ns_3ns_2_11_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln44_fu_467_p3),
    .din1(grp_fu_479_p1),
    .ce(grp_fu_479_ce),
    .dout(grp_fu_479_p2)
);

main_func_urem_6ns_3ns_2_10_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_6ns_3ns_2_10_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_548_p0),
    .din1(grp_fu_548_p1),
    .ce(grp_fu_548_ce),
    .dout(grp_fu_548_p2)
);

main_func_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U45(
    .din0(mul_ln44_fu_565_p0),
    .din1(mul_ln44_fu_565_p1),
    .dout(mul_ln44_fu_565_p2)
);

main_func_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U46(
    .din0(mul_ln45_fu_719_p0),
    .din1(mul_ln45_fu_719_p1),
    .dout(mul_ln45_fu_719_p2)
);

main_func_mac_muladd_2ns_16ns_15s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 18 ))
mac_muladd_2ns_16ns_15s_18_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_839_p0),
    .din1(grp_fu_839_p1),
    .din2(p_shl5_fu_609_p3),
    .ce(grp_fu_839_ce),
    .dout(grp_fu_839_p3)
);

main_func_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter13_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_fu_170 <= 2'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_405_p2 == 1'd0))) begin
            c_fu_170 <= select_ln43_1_fu_453_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            h_fu_162 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            h_fu_162 <= select_ln44_1_fu_541_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten24_fu_166 <= 13'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_405_p2 == 1'd0))) begin
            indvar_flatten24_fu_166 <= select_ln44_2_fu_497_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten37_fu_174 <= 14'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_405_p2 == 1'd0))) begin
            indvar_flatten37_fu_174 <= add_ln43_1_fu_411_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            w_fu_158 <= 7'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_405_p2 == 1'd0))) begin
            w_fu_158 <= add_ln45_fu_485_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln50_1_reg_954 <= add_ln50_1_fu_739_p2;
        add_ln50_1_reg_954_pp0_iter10_reg <= add_ln50_1_reg_954_pp0_iter9_reg;
        add_ln50_1_reg_954_pp0_iter5_reg <= add_ln50_1_reg_954;
        add_ln50_1_reg_954_pp0_iter6_reg <= add_ln50_1_reg_954_pp0_iter5_reg;
        add_ln50_1_reg_954_pp0_iter7_reg <= add_ln50_1_reg_954_pp0_iter6_reg;
        add_ln50_1_reg_954_pp0_iter8_reg <= add_ln50_1_reg_954_pp0_iter7_reg;
        add_ln50_1_reg_954_pp0_iter9_reg <= add_ln50_1_reg_954_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ap_predicate_pred504_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg == 2'd1) & (trunc_ln44_reg_969_pp0_iter12_reg == 2'd1) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred513_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg == 2'd0) & (trunc_ln44_reg_969_pp0_iter12_reg == 2'd1) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred525_state15 <= (~(trunc_ln45_reg_1018_pp0_iter12_reg == 2'd0) & ~(trunc_ln45_reg_1018_pp0_iter12_reg == 2'd1) & (trunc_ln44_reg_969_pp0_iter12_reg == 2'd1) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred535_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg == 2'd1) & (trunc_ln44_reg_969_pp0_iter12_reg == 2'd0) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred541_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg == 2'd0) & (trunc_ln44_reg_969_pp0_iter12_reg == 2'd0) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred549_state15 <= (~(trunc_ln45_reg_1018_pp0_iter12_reg == 2'd0) & ~(trunc_ln45_reg_1018_pp0_iter12_reg == 2'd1) & (trunc_ln44_reg_969_pp0_iter12_reg == 2'd0) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred563_state15 <= (~(trunc_ln44_reg_969_pp0_iter12_reg == 2'd0) & ~(trunc_ln44_reg_969_pp0_iter12_reg == 2'd1) & (trunc_ln45_reg_1018_pp0_iter12_reg == 2'd1) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred569_state15 <= (~(trunc_ln44_reg_969_pp0_iter12_reg == 2'd0) & ~(trunc_ln44_reg_969_pp0_iter12_reg == 2'd1) & (trunc_ln45_reg_1018_pp0_iter12_reg == 2'd0) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        ap_predicate_pred577_state15 <= (~(trunc_ln44_reg_969_pp0_iter12_reg == 2'd0) & ~(trunc_ln45_reg_1018_pp0_iter12_reg == 2'd0) & ~(trunc_ln45_reg_1018_pp0_iter12_reg == 2'd1) & ~(trunc_ln44_reg_969_pp0_iter12_reg == 2'd1) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0));
        empty_36_reg_943 <= empty_36_fu_603_p2;
        fm_addr_read_reg_1022 <= m_axi_fm_RDATA;
        fm_addr_reg_963 <= sext_ln53_fu_809_p1;
        inBuffer3x3_0_0_addr_reg_973 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_0_0_addr_reg_973_pp0_iter12_reg <= inBuffer3x3_0_0_addr_reg_973;
        inBuffer3x3_0_0_addr_reg_973_pp0_iter13_reg <= inBuffer3x3_0_0_addr_reg_973_pp0_iter12_reg;
        inBuffer3x3_0_1_addr_reg_978 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_0_1_addr_reg_978_pp0_iter12_reg <= inBuffer3x3_0_1_addr_reg_978;
        inBuffer3x3_0_1_addr_reg_978_pp0_iter13_reg <= inBuffer3x3_0_1_addr_reg_978_pp0_iter12_reg;
        inBuffer3x3_0_2_addr_reg_983 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_0_2_addr_reg_983_pp0_iter12_reg <= inBuffer3x3_0_2_addr_reg_983;
        inBuffer3x3_0_2_addr_reg_983_pp0_iter13_reg <= inBuffer3x3_0_2_addr_reg_983_pp0_iter12_reg;
        inBuffer3x3_1_0_addr_reg_988 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_1_0_addr_reg_988_pp0_iter12_reg <= inBuffer3x3_1_0_addr_reg_988;
        inBuffer3x3_1_0_addr_reg_988_pp0_iter13_reg <= inBuffer3x3_1_0_addr_reg_988_pp0_iter12_reg;
        inBuffer3x3_1_1_addr_reg_993 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_1_1_addr_reg_993_pp0_iter12_reg <= inBuffer3x3_1_1_addr_reg_993;
        inBuffer3x3_1_1_addr_reg_993_pp0_iter13_reg <= inBuffer3x3_1_1_addr_reg_993_pp0_iter12_reg;
        inBuffer3x3_1_2_addr_reg_998 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_1_2_addr_reg_998_pp0_iter12_reg <= inBuffer3x3_1_2_addr_reg_998;
        inBuffer3x3_1_2_addr_reg_998_pp0_iter13_reg <= inBuffer3x3_1_2_addr_reg_998_pp0_iter12_reg;
        inBuffer3x3_2_0_addr_reg_1003 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_2_0_addr_reg_1003_pp0_iter12_reg <= inBuffer3x3_2_0_addr_reg_1003;
        inBuffer3x3_2_0_addr_reg_1003_pp0_iter13_reg <= inBuffer3x3_2_0_addr_reg_1003_pp0_iter12_reg;
        inBuffer3x3_2_1_addr_reg_1008 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_2_1_addr_reg_1008_pp0_iter12_reg <= inBuffer3x3_2_1_addr_reg_1008;
        inBuffer3x3_2_1_addr_reg_1008_pp0_iter13_reg <= inBuffer3x3_2_1_addr_reg_1008_pp0_iter12_reg;
        inBuffer3x3_2_2_addr_reg_1013 <= zext_ln50_4_fu_823_p1;
        inBuffer3x3_2_2_addr_reg_1013_pp0_iter12_reg <= inBuffer3x3_2_2_addr_reg_1013;
        inBuffer3x3_2_2_addr_reg_1013_pp0_iter13_reg <= inBuffer3x3_2_2_addr_reg_1013_pp0_iter12_reg;
        or_ln49_reg_959 <= or_ln49_fu_770_p2;
        or_ln49_reg_959_pp0_iter10_reg <= or_ln49_reg_959_pp0_iter9_reg;
        or_ln49_reg_959_pp0_iter11_reg <= or_ln49_reg_959_pp0_iter10_reg;
        or_ln49_reg_959_pp0_iter12_reg <= or_ln49_reg_959_pp0_iter11_reg;
        or_ln49_reg_959_pp0_iter5_reg <= or_ln49_reg_959;
        or_ln49_reg_959_pp0_iter6_reg <= or_ln49_reg_959_pp0_iter5_reg;
        or_ln49_reg_959_pp0_iter7_reg <= or_ln49_reg_959_pp0_iter6_reg;
        or_ln49_reg_959_pp0_iter8_reg <= or_ln49_reg_959_pp0_iter7_reg;
        or_ln49_reg_959_pp0_iter9_reg <= or_ln49_reg_959_pp0_iter8_reg;
        select_ln43_1_reg_913_pp0_iter2_reg <= select_ln43_1_reg_913;
        select_ln43_1_reg_913_pp0_iter3_reg <= select_ln43_1_reg_913_pp0_iter2_reg;
        select_ln44_1_reg_931 <= select_ln44_1_fu_541_p3;
        select_ln44_reg_919_pp0_iter2_reg <= select_ln44_reg_919;
        select_ln44_reg_919_pp0_iter3_reg <= select_ln44_reg_919_pp0_iter2_reg;
        tmp_9_reg_938 <= {{mul_ln44_fu_565_p2[12:8]}};
        trunc_ln44_reg_969 <= trunc_ln44_fu_819_p1;
        trunc_ln44_reg_969_pp0_iter12_reg <= trunc_ln44_reg_969;
        trunc_ln45_reg_1018 <= trunc_ln45_fu_835_p1;
        trunc_ln45_reg_1018_pp0_iter12_reg <= trunc_ln45_reg_1018;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln43_reg_908 <= and_ln43_fu_447_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln44_reg_903 <= icmp_ln44_fu_429_p2;
        select_ln43_1_reg_913 <= select_ln43_1_fu_453_p3;
        select_ln44_reg_919 <= select_ln44_fu_467_p3;
        zext_ln43_cast_reg_894[7 : 0] <= zext_ln43_cast_fu_370_p1[7 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_405_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter13_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (or_ln49_reg_959 == 1'd0))) begin
        fm_blk_n_AR = m_axi_fm_ARREADY;
    end else begin
        fm_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0))) begin
        fm_blk_n_R = m_axi_fm_RVALID;
    end else begin
        fm_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_479_ce = 1'b1;
    end else begin
        grp_fu_479_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_548_ce = 1'b1;
    end else begin
        grp_fu_548_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_839_ce = 1'b1;
    end else begin
        grp_fu_839_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_0_ce0 = 1'b1;
    end else begin
        inBuffer3x3_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_0_ce1 = 1'b1;
    end else begin
        inBuffer3x3_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred541_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_0_we0 = 1'b1;
    end else begin
        inBuffer3x3_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln45_fu_835_p1 == 2'd0) & (trunc_ln44_fu_819_p1 == 2'd0) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_0_we1 = 1'b1;
    end else begin
        inBuffer3x3_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_1_ce0 = 1'b1;
    end else begin
        inBuffer3x3_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_1_ce1 = 1'b1;
    end else begin
        inBuffer3x3_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred535_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_1_we0 = 1'b1;
    end else begin
        inBuffer3x3_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln45_fu_835_p1 == 2'd1) & (trunc_ln44_fu_819_p1 == 2'd0) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_1_we1 = 1'b1;
    end else begin
        inBuffer3x3_0_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_2_ce0 = 1'b1;
    end else begin
        inBuffer3x3_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_2_ce1 = 1'b1;
    end else begin
        inBuffer3x3_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred549_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_2_we0 = 1'b1;
    end else begin
        inBuffer3x3_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln45_fu_835_p1 == 2'd0) & ~(trunc_ln45_fu_835_p1 == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln44_fu_819_p1 == 2'd0) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_0_2_we1 = 1'b1;
    end else begin
        inBuffer3x3_0_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_0_ce0 = 1'b1;
    end else begin
        inBuffer3x3_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_0_ce1 = 1'b1;
    end else begin
        inBuffer3x3_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred513_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_0_we0 = 1'b1;
    end else begin
        inBuffer3x3_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln45_fu_835_p1 == 2'd0) & (trunc_ln44_fu_819_p1 == 2'd1) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_0_we1 = 1'b1;
    end else begin
        inBuffer3x3_1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_1_ce0 = 1'b1;
    end else begin
        inBuffer3x3_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_1_ce1 = 1'b1;
    end else begin
        inBuffer3x3_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred504_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_1_we0 = 1'b1;
    end else begin
        inBuffer3x3_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln45_fu_835_p1 == 2'd1) & (trunc_ln44_fu_819_p1 == 2'd1) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_1_we1 = 1'b1;
    end else begin
        inBuffer3x3_1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_2_ce0 = 1'b1;
    end else begin
        inBuffer3x3_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_2_ce1 = 1'b1;
    end else begin
        inBuffer3x3_1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred525_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_2_we0 = 1'b1;
    end else begin
        inBuffer3x3_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln45_fu_835_p1 == 2'd0) & ~(trunc_ln45_fu_835_p1 == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln44_fu_819_p1 == 2'd1) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_1_2_we1 = 1'b1;
    end else begin
        inBuffer3x3_1_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_0_ce0 = 1'b1;
    end else begin
        inBuffer3x3_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_0_ce1 = 1'b1;
    end else begin
        inBuffer3x3_2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred569_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_0_we0 = 1'b1;
    end else begin
        inBuffer3x3_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln44_fu_819_p1 == 2'd0) & ~(trunc_ln44_fu_819_p1 == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln45_fu_835_p1 == 2'd0) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_0_we1 = 1'b1;
    end else begin
        inBuffer3x3_2_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_1_ce0 = 1'b1;
    end else begin
        inBuffer3x3_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_1_ce1 = 1'b1;
    end else begin
        inBuffer3x3_2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred563_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_1_we0 = 1'b1;
    end else begin
        inBuffer3x3_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln44_fu_819_p1 == 2'd0) & ~(trunc_ln44_fu_819_p1 == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln45_fu_835_p1 == 2'd1) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_1_we1 = 1'b1;
    end else begin
        inBuffer3x3_2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_2_ce0 = 1'b1;
    end else begin
        inBuffer3x3_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_2_ce1 = 1'b1;
    end else begin
        inBuffer3x3_2_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (ap_predicate_pred577_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_2_we0 = 1'b1;
    end else begin
        inBuffer3x3_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln44_fu_819_p1 == 2'd0) & ~(trunc_ln45_fu_835_p1 == 2'd0) & ~(trunc_ln45_fu_835_p1 == 2'd1) & ~(trunc_ln44_fu_819_p1 == 2'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (or_ln49_reg_959_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inBuffer3x3_2_2_we1 = 1'b1;
    end else begin
        inBuffer3x3_2_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln49_reg_959 == 1'd0))) begin
        m_axi_fm_ARVALID = 1'b1;
    end else begin
        m_axi_fm_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln49_reg_959_pp0_iter12_reg == 1'd0))) begin
        m_axi_fm_RREADY = 1'b1;
    end else begin
        m_axi_fm_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln43_1_fu_411_p2 = (indvar_flatten37_fu_174 + 14'd1);

assign add_ln43_fu_423_p2 = (c_fu_170 + 2'd1);

assign add_ln44_1_fu_491_p2 = (indvar_flatten24_fu_166 + 13'd1);

assign add_ln44_fu_535_p2 = (select_ln43_fu_528_p3 + 6'd1);

assign add_ln45_fu_485_p2 = (select_ln44_fu_467_p3 + 7'd1);

assign add_ln47_1_fu_755_p2 = ($signed(sext_ln47_fu_751_p1) + $signed(zext_ln43_cast_reg_894));

assign add_ln47_fu_745_p2 = ($signed(zext_ln45_fu_713_p1) + $signed(8'd255));

assign add_ln48_fu_703_p2 = ($signed(grp_fu_839_p3) + $signed(p_shl4_cast_fu_699_p1));

assign add_ln50_1_fu_739_p2 = (sub_ln50_1_fu_686_p2 + zext_ln50_3_fu_735_p1);

assign add_ln50_fu_656_p2 = ($signed(sext_ln43_fu_649_p1) + $signed(zext_ln50_2_fu_653_p1));

assign add_ln53_1_fu_776_p2 = ($signed(add_ln48_fu_703_p2) + $signed(sext_ln49_fu_760_p1));

assign add_ln53_fu_794_p2 = (zext_ln53_fu_790_p1 + input_feature_map);

assign and_ln43_fu_447_p2 = (xor_ln43_fu_435_p2 & icmp_ln45_fu_441_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage0_iter13)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage0_iter13)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter13 = ((or_ln49_reg_959_pp0_iter12_reg == 1'd0) & (m_axi_fm_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((m_axi_fm_ARREADY == 1'b0) & (or_ln49_reg_959 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign empty_36_fu_603_p2 = ($signed(tmp3_cast_fu_599_p1) + $signed(tmp2_cast_fu_589_p1));

assign empty_37_fu_708_p2 = ((empty_36_reg_943 > 9'd159) ? 1'b1 : 1'b0);

assign grp_fu_479_p1 = 7'd3;

assign grp_fu_548_p0 = ((and_ln43_reg_908[0:0] == 1'b1) ? add_ln44_fu_535_p2 : select_ln43_fu_528_p3);

assign grp_fu_548_p1 = 6'd3;

assign grp_fu_839_p0 = grp_fu_839_p00;

assign grp_fu_839_p00 = select_ln43_1_fu_453_p3;

assign grp_fu_839_p1 = 18'd51200;

assign icmp_ln43_fu_405_p2 = ((indvar_flatten37_fu_174 == 14'd10332) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_429_p2 = ((indvar_flatten24_fu_166 == 13'd3444) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_441_p2 = ((w_fu_158 == 7'd82) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_764_p2 = ((add_ln47_1_fu_755_p2 > 10'd319) ? 1'b1 : 1'b0);

assign inBuffer3x3_0_0_address0 = inBuffer3x3_0_0_addr_reg_973_pp0_iter13_reg;

assign inBuffer3x3_0_0_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_0_0_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_0_0_d1 = 16'd0;

assign inBuffer3x3_0_1_address0 = inBuffer3x3_0_1_addr_reg_978_pp0_iter13_reg;

assign inBuffer3x3_0_1_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_0_1_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_0_1_d1 = 16'd0;

assign inBuffer3x3_0_2_address0 = inBuffer3x3_0_2_addr_reg_983_pp0_iter13_reg;

assign inBuffer3x3_0_2_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_0_2_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_0_2_d1 = 16'd0;

assign inBuffer3x3_1_0_address0 = inBuffer3x3_1_0_addr_reg_988_pp0_iter13_reg;

assign inBuffer3x3_1_0_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_1_0_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_1_0_d1 = 16'd0;

assign inBuffer3x3_1_1_address0 = inBuffer3x3_1_1_addr_reg_993_pp0_iter13_reg;

assign inBuffer3x3_1_1_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_1_1_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_1_1_d1 = 16'd0;

assign inBuffer3x3_1_2_address0 = inBuffer3x3_1_2_addr_reg_998_pp0_iter13_reg;

assign inBuffer3x3_1_2_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_1_2_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_1_2_d1 = 16'd0;

assign inBuffer3x3_2_0_address0 = inBuffer3x3_2_0_addr_reg_1003_pp0_iter13_reg;

assign inBuffer3x3_2_0_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_2_0_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_2_0_d1 = 16'd0;

assign inBuffer3x3_2_1_address0 = inBuffer3x3_2_1_addr_reg_1008_pp0_iter13_reg;

assign inBuffer3x3_2_1_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_2_1_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_2_1_d1 = 16'd0;

assign inBuffer3x3_2_2_address0 = inBuffer3x3_2_2_addr_reg_1013_pp0_iter13_reg;

assign inBuffer3x3_2_2_address1 = zext_ln50_4_fu_823_p1;

assign inBuffer3x3_2_2_d0 = fm_addr_read_reg_1022;

assign inBuffer3x3_2_2_d1 = 16'd0;

assign m_axi_fm_ARADDR = fm_addr_reg_963;

assign m_axi_fm_ARBURST = 2'd0;

assign m_axi_fm_ARCACHE = 4'd0;

assign m_axi_fm_ARID = 1'd0;

assign m_axi_fm_ARLEN = 32'd1;

assign m_axi_fm_ARLOCK = 2'd0;

assign m_axi_fm_ARPROT = 3'd0;

assign m_axi_fm_ARQOS = 4'd0;

assign m_axi_fm_ARREGION = 4'd0;

assign m_axi_fm_ARSIZE = 3'd0;

assign m_axi_fm_ARUSER = 1'd0;

assign m_axi_fm_AWADDR = 64'd0;

assign m_axi_fm_AWBURST = 2'd0;

assign m_axi_fm_AWCACHE = 4'd0;

assign m_axi_fm_AWID = 1'd0;

assign m_axi_fm_AWLEN = 32'd0;

assign m_axi_fm_AWLOCK = 2'd0;

assign m_axi_fm_AWPROT = 3'd0;

assign m_axi_fm_AWQOS = 4'd0;

assign m_axi_fm_AWREGION = 4'd0;

assign m_axi_fm_AWSIZE = 3'd0;

assign m_axi_fm_AWUSER = 1'd0;

assign m_axi_fm_AWVALID = 1'b0;

assign m_axi_fm_BREADY = 1'b0;

assign m_axi_fm_WDATA = 16'd0;

assign m_axi_fm_WID = 1'd0;

assign m_axi_fm_WLAST = 1'b0;

assign m_axi_fm_WSTRB = 2'd0;

assign m_axi_fm_WUSER = 1'd0;

assign m_axi_fm_WVALID = 1'b0;

assign mul_ln44_fu_565_p0 = mul_ln44_fu_565_p00;

assign mul_ln44_fu_565_p00 = select_ln44_1_reg_931;

assign mul_ln44_fu_565_p1 = 13'd86;

assign mul_ln45_fu_719_p0 = mul_ln45_fu_719_p00;

assign mul_ln45_fu_719_p00 = select_ln44_reg_919_pp0_iter3_reg;

assign mul_ln45_fu_719_p1 = 15'd171;

assign or_ln44_fu_461_p2 = (icmp_ln44_fu_429_p2 | and_ln43_fu_447_p2);

assign or_ln49_fu_770_p2 = (icmp_ln49_fu_764_p2 | empty_37_fu_708_p2);

assign p_shl4_cast_fu_699_p1 = $signed(p_shl4_fu_692_p3);

assign p_shl4_fu_692_p3 = {{empty_36_reg_943}, {8'd0}};

assign p_shl5_fu_609_p3 = {{empty_36_fu_603_p2}, {6'd0}};

assign select_ln43_1_fu_453_p3 = ((icmp_ln44_fu_429_p2[0:0] == 1'b1) ? add_ln43_fu_423_p2 : c_fu_170);

assign select_ln43_fu_528_p3 = ((icmp_ln44_reg_903[0:0] == 1'b1) ? 6'd0 : h_fu_162);

assign select_ln44_1_fu_541_p3 = ((and_ln43_reg_908[0:0] == 1'b1) ? add_ln44_fu_535_p2 : select_ln43_fu_528_p3);

assign select_ln44_2_fu_497_p3 = ((icmp_ln44_fu_429_p2[0:0] == 1'b1) ? 13'd1 : add_ln44_1_fu_491_p2);

assign select_ln44_fu_467_p3 = ((or_ln44_fu_461_p2[0:0] == 1'b1) ? 7'd0 : w_fu_158);

assign sext_ln43_fu_649_p1 = $signed(sub_ln50_fu_643_p2);

assign sext_ln47_fu_751_p1 = $signed(add_ln47_fu_745_p2);

assign sext_ln49_fu_760_p1 = add_ln47_1_fu_755_p2;

assign sext_ln50_fu_682_p1 = $signed(tmp_11_fu_674_p3);

assign sext_ln53_fu_809_p1 = $signed(trunc_ln6_fu_799_p4);

assign shl_ln_fu_782_p3 = {{add_ln53_1_fu_776_p2}, {1'd0}};

assign sub_ln50_1_fu_686_p2 = ($signed(tmp_10_fu_666_p3) - $signed(sext_ln50_fu_682_p1));

assign sub_ln50_fu_643_p2 = (zext_ln50_fu_628_p1 - zext_ln50_1_fu_639_p1);

assign tmp2_cast_fu_589_p1 = tmp2_fu_581_p4;

assign tmp2_fu_581_p4 = {{{empty}, {empty}}, {3'd0}};

assign tmp3_cast_fu_599_p1 = $signed(tmp3_fu_593_p2);

assign tmp3_fu_593_p2 = ($signed(zext_ln44_fu_559_p1) + $signed(7'd127));

assign tmp_10_fu_666_p3 = {{trunc_ln50_fu_662_p1}, {5'd0}};

assign tmp_11_fu_674_p3 = {{add_ln50_fu_656_p2}, {2'd0}};

assign tmp_12_fu_725_p4 = {{mul_ln45_fu_719_p2[14:9]}};

assign tmp_7_fu_632_p3 = {{select_ln43_1_reg_913_pp0_iter3_reg}, {1'd0}};

assign tmp_s_fu_621_p3 = {{select_ln43_1_reg_913_pp0_iter3_reg}, {4'd0}};

assign trunc_ln44_fu_819_p1 = grp_fu_548_p2[1:0];

assign trunc_ln45_fu_835_p1 = grp_fu_479_p2[1:0];

assign trunc_ln50_fu_662_p1 = add_ln50_fu_656_p2[5:0];

assign trunc_ln6_fu_799_p4 = {{add_ln53_fu_794_p2[63:1]}};

assign xor_ln43_fu_435_p2 = (icmp_ln44_fu_429_p2 ^ 1'd1);

assign zext_ln43_cast_fu_370_p1 = zext_ln43;

assign zext_ln44_fu_559_p1 = select_ln44_1_reg_931;

assign zext_ln45_fu_713_p1 = select_ln44_reg_919_pp0_iter3_reg;

assign zext_ln50_1_fu_639_p1 = tmp_7_fu_632_p3;

assign zext_ln50_2_fu_653_p1 = tmp_9_reg_938;

assign zext_ln50_3_fu_735_p1 = tmp_12_fu_725_p4;

assign zext_ln50_4_fu_823_p1 = add_ln50_1_reg_954_pp0_iter10_reg;

assign zext_ln50_fu_628_p1 = tmp_s_fu_621_p3;

assign zext_ln53_fu_790_p1 = shl_ln_fu_782_p3;

always @ (posedge ap_clk) begin
    zext_ln43_cast_reg_894[9:8] <= 2'b00;
end

endmodule //main_func_main_func_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3
