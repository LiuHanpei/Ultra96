-- ==============================================================
-- Generated by Vitis HLS v2023.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_func_main_func_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_fm_AWVALID : OUT STD_LOGIC;
    m_axi_fm_AWREADY : IN STD_LOGIC;
    m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_WVALID : OUT STD_LOGIC;
    m_axi_fm_WREADY : IN STD_LOGIC;
    m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_WLAST : OUT STD_LOGIC;
    m_axi_fm_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_ARVALID : OUT STD_LOGIC;
    m_axi_fm_ARREADY : IN STD_LOGIC;
    m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_RVALID : IN STD_LOGIC;
    m_axi_fm_RREADY : OUT STD_LOGIC;
    m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_fm_RLAST : IN STD_LOGIC;
    m_axi_fm_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
    m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BVALID : IN STD_LOGIC;
    m_axi_fm_BREADY : OUT STD_LOGIC;
    m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (1 downto 0);
    zext_ln43 : IN STD_LOGIC_VECTOR (7 downto 0);
    input_feature_map : IN STD_LOGIC_VECTOR (63 downto 0);
    inBuffer3x3_0_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_0_ce0 : OUT STD_LOGIC;
    inBuffer3x3_0_0_we0 : OUT STD_LOGIC;
    inBuffer3x3_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_0_ce1 : OUT STD_LOGIC;
    inBuffer3x3_0_0_we1 : OUT STD_LOGIC;
    inBuffer3x3_0_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_1_ce0 : OUT STD_LOGIC;
    inBuffer3x3_0_1_we0 : OUT STD_LOGIC;
    inBuffer3x3_0_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_1_ce1 : OUT STD_LOGIC;
    inBuffer3x3_0_1_we1 : OUT STD_LOGIC;
    inBuffer3x3_0_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_2_ce0 : OUT STD_LOGIC;
    inBuffer3x3_0_2_we0 : OUT STD_LOGIC;
    inBuffer3x3_0_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_2_ce1 : OUT STD_LOGIC;
    inBuffer3x3_0_2_we1 : OUT STD_LOGIC;
    inBuffer3x3_0_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_0_ce0 : OUT STD_LOGIC;
    inBuffer3x3_1_0_we0 : OUT STD_LOGIC;
    inBuffer3x3_1_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_0_ce1 : OUT STD_LOGIC;
    inBuffer3x3_1_0_we1 : OUT STD_LOGIC;
    inBuffer3x3_1_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_1_ce0 : OUT STD_LOGIC;
    inBuffer3x3_1_1_we0 : OUT STD_LOGIC;
    inBuffer3x3_1_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_1_ce1 : OUT STD_LOGIC;
    inBuffer3x3_1_1_we1 : OUT STD_LOGIC;
    inBuffer3x3_1_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_2_ce0 : OUT STD_LOGIC;
    inBuffer3x3_1_2_we0 : OUT STD_LOGIC;
    inBuffer3x3_1_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_2_ce1 : OUT STD_LOGIC;
    inBuffer3x3_1_2_we1 : OUT STD_LOGIC;
    inBuffer3x3_1_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_0_ce0 : OUT STD_LOGIC;
    inBuffer3x3_2_0_we0 : OUT STD_LOGIC;
    inBuffer3x3_2_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_0_ce1 : OUT STD_LOGIC;
    inBuffer3x3_2_0_we1 : OUT STD_LOGIC;
    inBuffer3x3_2_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_1_ce0 : OUT STD_LOGIC;
    inBuffer3x3_2_1_we0 : OUT STD_LOGIC;
    inBuffer3x3_2_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_1_ce1 : OUT STD_LOGIC;
    inBuffer3x3_2_1_we1 : OUT STD_LOGIC;
    inBuffer3x3_2_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_2_ce0 : OUT STD_LOGIC;
    inBuffer3x3_2_2_we0 : OUT STD_LOGIC;
    inBuffer3x3_2_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_2_ce1 : OUT STD_LOGIC;
    inBuffer3x3_2_2_we1 : OUT STD_LOGIC;
    inBuffer3x3_2_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of main_func_main_func_Pipeline_VITIS_LOOP_43_1_VITIS_LOOP_44_2_VITIS_LOOP_45_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv14_285C : STD_LOGIC_VECTOR (13 downto 0) := "10100001011100";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv13_D74 : STD_LOGIC_VECTOR (12 downto 0) := "0110101110100";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv13_56 : STD_LOGIC_VECTOR (12 downto 0) := "0000001010110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_9F : STD_LOGIC_VECTOR (8 downto 0) := "010011111";
    constant ap_const_lv15_AB : STD_LOGIC_VECTOR (14 downto 0) := "000000010101011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv10_13F : STD_LOGIC_VECTOR (9 downto 0) := "0100111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv18_C800 : STD_LOGIC_VECTOR (17 downto 0) := "001100100000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal or_ln49_reg_959 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_io : BOOLEAN;
    signal or_ln49_reg_959_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln43_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal fm_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fm_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln43_cast_fu_370_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln43_cast_reg_894 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln44_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_903 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_reg_908 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln43_1_fu_453_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln43_1_reg_913 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln43_1_reg_913_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln43_1_reg_913_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln44_fu_467_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln44_reg_919 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln44_reg_919_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln44_reg_919_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln44_1_fu_541_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln44_1_reg_931 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_reg_938 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_36_fu_603_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_36_reg_943 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln50_1_fu_739_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954_pp0_iter9_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_954_pp0_iter10_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln49_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_959_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_addr_reg_963 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln44_fu_819_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln44_reg_969 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln44_reg_969_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal inBuffer3x3_0_0_addr_reg_973 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_0_addr_reg_973_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_0_addr_reg_973_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_1_addr_reg_978 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_1_addr_reg_978_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_1_addr_reg_978_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_2_addr_reg_983 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_2_addr_reg_983_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_0_2_addr_reg_983_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_0_addr_reg_988 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_0_addr_reg_988_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_0_addr_reg_988_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_1_addr_reg_993 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_1_addr_reg_993_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_1_addr_reg_993_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_2_addr_reg_998 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_2_addr_reg_998_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_1_2_addr_reg_998_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_0_addr_reg_1003 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_0_addr_reg_1003_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_0_addr_reg_1003_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_1_addr_reg_1008 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_1_addr_reg_1008_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_1_addr_reg_1008_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_2_addr_reg_1013 : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_2_addr_reg_1013_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal inBuffer3x3_2_2_addr_reg_1013_pp0_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln45_fu_835_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_1018 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln45_reg_1018_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal fm_addr_read_reg_1022 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln50_4_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln53_fu_809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_fu_158 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln45_fu_485_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal h_fu_162 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal indvar_flatten24_fu_166 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal select_ln44_2_fu_497_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_fu_170 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal indvar_flatten37_fu_174 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal add_ln43_1_fu_411_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_predicate_pred504_state15 : BOOLEAN;
    signal ap_predicate_pred513_state15 : BOOLEAN;
    signal ap_predicate_pred525_state15 : BOOLEAN;
    signal ap_predicate_pred535_state15 : BOOLEAN;
    signal ap_predicate_pred541_state15 : BOOLEAN;
    signal ap_predicate_pred549_state15 : BOOLEAN;
    signal ap_predicate_pred563_state15 : BOOLEAN;
    signal ap_predicate_pred569_state15 : BOOLEAN;
    signal ap_predicate_pred577_state15 : BOOLEAN;
    signal icmp_ln45_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln43_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln43_fu_423_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln44_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_479_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln44_1_fu_491_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln43_fu_528_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln44_fu_535_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_548_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln44_fu_565_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_fu_565_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln44_fu_565_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp2_fu_581_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln44_fu_559_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_fu_593_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_cast_fu_599_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp2_cast_fu_589_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_fu_609_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_s_fu_621_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_632_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln50_fu_628_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln50_1_fu_639_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln50_fu_643_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln43_fu_649_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln50_2_fu_653_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln50_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln50_fu_662_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_674_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_666_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln50_fu_682_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl4_fu_692_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_839_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl4_cast_fu_699_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln45_fu_719_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln45_fu_719_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln45_fu_719_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_12_fu_725_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln50_1_fu_686_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln50_3_fu_735_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln45_fu_713_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln47_fu_745_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln47_fu_751_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln47_1_fu_755_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln49_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_37_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln48_fu_703_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln48_fu_703_p2 : signal is "no";
    signal sext_ln49_fu_760_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln53_1_fu_776_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln_fu_782_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln53_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_fu_794_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln6_fu_799_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_479_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_839_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_839_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_479_ce : STD_LOGIC;
    signal grp_fu_548_ce : STD_LOGIC;
    signal grp_fu_839_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_839_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln44_fu_565_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln45_fu_719_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component main_func_urem_7ns_3ns_2_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_func_urem_6ns_3ns_2_10_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_func_mul_6ns_8ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component main_func_mul_7ns_9ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component main_func_mac_muladd_2ns_16ns_15s_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component main_func_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    urem_7ns_3ns_2_11_1_U43 : component main_func_urem_7ns_3ns_2_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln44_fu_467_p3,
        din1 => grp_fu_479_p1,
        ce => grp_fu_479_ce,
        dout => grp_fu_479_p2);

    urem_6ns_3ns_2_10_1_U44 : component main_func_urem_6ns_3ns_2_10_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_548_p0,
        din1 => grp_fu_548_p1,
        ce => grp_fu_548_ce,
        dout => grp_fu_548_p2);

    mul_6ns_8ns_13_1_1_U45 : component main_func_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln44_fu_565_p0,
        din1 => mul_ln44_fu_565_p1,
        dout => mul_ln44_fu_565_p2);

    mul_7ns_9ns_15_1_1_U46 : component main_func_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln45_fu_719_p0,
        din1 => mul_ln45_fu_719_p1,
        dout => mul_ln45_fu_719_p2);

    mac_muladd_2ns_16ns_15s_18_4_1_U47 : component main_func_mac_muladd_2ns_16ns_15s_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 2,
        din1_WIDTH => 16,
        din2_WIDTH => 15,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_839_p0,
        din1 => grp_fu_839_p1,
        din2 => p_shl5_fu_609_p3,
        ce => grp_fu_839_ce,
        dout => grp_fu_839_p3);

    flow_control_loop_pipe_sequential_init_U : component main_func_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    c_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_170 <= ap_const_lv2_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_405_p2 = ap_const_lv1_0))) then 
                    c_fu_170 <= select_ln43_1_fu_453_p3;
                end if;
            end if; 
        end if;
    end process;

    h_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    h_fu_162 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    h_fu_162 <= select_ln44_1_fu_541_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten24_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten24_fu_166 <= ap_const_lv13_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_405_p2 = ap_const_lv1_0))) then 
                    indvar_flatten24_fu_166 <= select_ln44_2_fu_497_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten37_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten37_fu_174 <= ap_const_lv14_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_405_p2 = ap_const_lv1_0))) then 
                    indvar_flatten37_fu_174 <= add_ln43_1_fu_411_p2;
                end if;
            end if; 
        end if;
    end process;

    w_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w_fu_158 <= ap_const_lv7_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln43_fu_405_p2 = ap_const_lv1_0))) then 
                    w_fu_158 <= add_ln45_fu_485_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln50_1_reg_954 <= add_ln50_1_fu_739_p2;
                add_ln50_1_reg_954_pp0_iter10_reg <= add_ln50_1_reg_954_pp0_iter9_reg;
                add_ln50_1_reg_954_pp0_iter5_reg <= add_ln50_1_reg_954;
                add_ln50_1_reg_954_pp0_iter6_reg <= add_ln50_1_reg_954_pp0_iter5_reg;
                add_ln50_1_reg_954_pp0_iter7_reg <= add_ln50_1_reg_954_pp0_iter6_reg;
                add_ln50_1_reg_954_pp0_iter8_reg <= add_ln50_1_reg_954_pp0_iter7_reg;
                add_ln50_1_reg_954_pp0_iter9_reg <= add_ln50_1_reg_954_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                    ap_predicate_pred504_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_1) and (trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred513_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_0) and (trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred525_state15 <= (not((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_0)) and not((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_1)) and (trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred535_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_1) and (trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred541_state15 <= ((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_0) and (trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred549_state15 <= (not((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_0)) and not((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_1)) and (trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred563_state15 <= (not((trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_0)) and not((trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_1)) and (trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred569_state15 <= (not((trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_0)) and not((trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_1)) and (trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                    ap_predicate_pred577_state15 <= (not((trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_0)) and not((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_0)) and not((trunc_ln45_reg_1018_pp0_iter12_reg = ap_const_lv2_1)) and not((trunc_ln44_reg_969_pp0_iter12_reg = ap_const_lv2_1)) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0));
                empty_36_reg_943 <= empty_36_fu_603_p2;
                fm_addr_read_reg_1022 <= m_axi_fm_RDATA;
                fm_addr_reg_963 <= sext_ln53_fu_809_p1;
                inBuffer3x3_0_0_addr_reg_973 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_0_0_addr_reg_973_pp0_iter12_reg <= inBuffer3x3_0_0_addr_reg_973;
                inBuffer3x3_0_0_addr_reg_973_pp0_iter13_reg <= inBuffer3x3_0_0_addr_reg_973_pp0_iter12_reg;
                inBuffer3x3_0_1_addr_reg_978 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_0_1_addr_reg_978_pp0_iter12_reg <= inBuffer3x3_0_1_addr_reg_978;
                inBuffer3x3_0_1_addr_reg_978_pp0_iter13_reg <= inBuffer3x3_0_1_addr_reg_978_pp0_iter12_reg;
                inBuffer3x3_0_2_addr_reg_983 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_0_2_addr_reg_983_pp0_iter12_reg <= inBuffer3x3_0_2_addr_reg_983;
                inBuffer3x3_0_2_addr_reg_983_pp0_iter13_reg <= inBuffer3x3_0_2_addr_reg_983_pp0_iter12_reg;
                inBuffer3x3_1_0_addr_reg_988 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_1_0_addr_reg_988_pp0_iter12_reg <= inBuffer3x3_1_0_addr_reg_988;
                inBuffer3x3_1_0_addr_reg_988_pp0_iter13_reg <= inBuffer3x3_1_0_addr_reg_988_pp0_iter12_reg;
                inBuffer3x3_1_1_addr_reg_993 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_1_1_addr_reg_993_pp0_iter12_reg <= inBuffer3x3_1_1_addr_reg_993;
                inBuffer3x3_1_1_addr_reg_993_pp0_iter13_reg <= inBuffer3x3_1_1_addr_reg_993_pp0_iter12_reg;
                inBuffer3x3_1_2_addr_reg_998 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_1_2_addr_reg_998_pp0_iter12_reg <= inBuffer3x3_1_2_addr_reg_998;
                inBuffer3x3_1_2_addr_reg_998_pp0_iter13_reg <= inBuffer3x3_1_2_addr_reg_998_pp0_iter12_reg;
                inBuffer3x3_2_0_addr_reg_1003 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_2_0_addr_reg_1003_pp0_iter12_reg <= inBuffer3x3_2_0_addr_reg_1003;
                inBuffer3x3_2_0_addr_reg_1003_pp0_iter13_reg <= inBuffer3x3_2_0_addr_reg_1003_pp0_iter12_reg;
                inBuffer3x3_2_1_addr_reg_1008 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_2_1_addr_reg_1008_pp0_iter12_reg <= inBuffer3x3_2_1_addr_reg_1008;
                inBuffer3x3_2_1_addr_reg_1008_pp0_iter13_reg <= inBuffer3x3_2_1_addr_reg_1008_pp0_iter12_reg;
                inBuffer3x3_2_2_addr_reg_1013 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);
                inBuffer3x3_2_2_addr_reg_1013_pp0_iter12_reg <= inBuffer3x3_2_2_addr_reg_1013;
                inBuffer3x3_2_2_addr_reg_1013_pp0_iter13_reg <= inBuffer3x3_2_2_addr_reg_1013_pp0_iter12_reg;
                or_ln49_reg_959 <= or_ln49_fu_770_p2;
                or_ln49_reg_959_pp0_iter10_reg <= or_ln49_reg_959_pp0_iter9_reg;
                or_ln49_reg_959_pp0_iter11_reg <= or_ln49_reg_959_pp0_iter10_reg;
                or_ln49_reg_959_pp0_iter12_reg <= or_ln49_reg_959_pp0_iter11_reg;
                or_ln49_reg_959_pp0_iter5_reg <= or_ln49_reg_959;
                or_ln49_reg_959_pp0_iter6_reg <= or_ln49_reg_959_pp0_iter5_reg;
                or_ln49_reg_959_pp0_iter7_reg <= or_ln49_reg_959_pp0_iter6_reg;
                or_ln49_reg_959_pp0_iter8_reg <= or_ln49_reg_959_pp0_iter7_reg;
                or_ln49_reg_959_pp0_iter9_reg <= or_ln49_reg_959_pp0_iter8_reg;
                select_ln43_1_reg_913_pp0_iter2_reg <= select_ln43_1_reg_913;
                select_ln43_1_reg_913_pp0_iter3_reg <= select_ln43_1_reg_913_pp0_iter2_reg;
                select_ln44_1_reg_931 <= select_ln44_1_fu_541_p3;
                select_ln44_reg_919_pp0_iter2_reg <= select_ln44_reg_919;
                select_ln44_reg_919_pp0_iter3_reg <= select_ln44_reg_919_pp0_iter2_reg;
                tmp_9_reg_938 <= mul_ln44_fu_565_p2(12 downto 8);
                trunc_ln44_reg_969 <= trunc_ln44_fu_819_p1;
                trunc_ln44_reg_969_pp0_iter12_reg <= trunc_ln44_reg_969;
                trunc_ln45_reg_1018 <= trunc_ln45_fu_835_p1;
                trunc_ln45_reg_1018_pp0_iter12_reg <= trunc_ln45_reg_1018;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln43_reg_908 <= and_ln43_fu_447_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln44_reg_903 <= icmp_ln44_fu_429_p2;
                select_ln43_1_reg_913 <= select_ln43_1_fu_453_p3;
                select_ln44_reg_919 <= select_ln44_fu_467_p3;
                    zext_ln43_cast_reg_894(7 downto 0) <= zext_ln43_cast_fu_370_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln43_cast_reg_894(9 downto 8) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln43_1_fu_411_p2 <= std_logic_vector(unsigned(indvar_flatten37_fu_174) + unsigned(ap_const_lv14_1));
    add_ln43_fu_423_p2 <= std_logic_vector(unsigned(c_fu_170) + unsigned(ap_const_lv2_1));
    add_ln44_1_fu_491_p2 <= std_logic_vector(unsigned(indvar_flatten24_fu_166) + unsigned(ap_const_lv13_1));
    add_ln44_fu_535_p2 <= std_logic_vector(unsigned(select_ln43_fu_528_p3) + unsigned(ap_const_lv6_1));
    add_ln45_fu_485_p2 <= std_logic_vector(unsigned(select_ln44_fu_467_p3) + unsigned(ap_const_lv7_1));
    add_ln47_1_fu_755_p2 <= std_logic_vector(signed(sext_ln47_fu_751_p1) + signed(zext_ln43_cast_reg_894));
    add_ln47_fu_745_p2 <= std_logic_vector(unsigned(zext_ln45_fu_713_p1) + unsigned(ap_const_lv8_FF));
    add_ln48_fu_703_p2 <= std_logic_vector(signed(grp_fu_839_p3) + signed(p_shl4_cast_fu_699_p1));
    add_ln50_1_fu_739_p2 <= std_logic_vector(unsigned(sub_ln50_1_fu_686_p2) + unsigned(zext_ln50_3_fu_735_p1));
    add_ln50_fu_656_p2 <= std_logic_vector(signed(sext_ln43_fu_649_p1) + signed(zext_ln50_2_fu_653_p1));
    add_ln53_1_fu_776_p2 <= std_logic_vector(unsigned(add_ln48_fu_703_p2) + unsigned(sext_ln49_fu_760_p1));
    add_ln53_fu_794_p2 <= std_logic_vector(unsigned(zext_ln53_fu_790_p1) + unsigned(input_feature_map));
    and_ln43_fu_447_p2 <= (xor_ln43_fu_435_p2 and icmp_ln45_fu_441_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter13, ap_block_state6_io, ap_block_state14_pp0_stage0_iter13)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage0_iter13)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter13, ap_block_state6_io, ap_block_state14_pp0_stage0_iter13)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_pp0_stage0_iter13)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)));
    end process;


    ap_block_state14_pp0_stage0_iter13_assign_proc : process(m_axi_fm_RVALID, or_ln49_reg_959_pp0_iter12_reg)
    begin
                ap_block_state14_pp0_stage0_iter13 <= ((or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0) and (m_axi_fm_RVALID = ap_const_logic_0));
    end process;


    ap_block_state6_io_assign_proc : process(m_axi_fm_ARREADY, or_ln49_reg_959)
    begin
                ap_block_state6_io <= ((m_axi_fm_ARREADY = ap_const_logic_0) and (or_ln49_reg_959 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln43_fu_405_p2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln43_fu_405_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter13_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    empty_36_fu_603_p2 <= std_logic_vector(signed(tmp3_cast_fu_599_p1) + signed(tmp2_cast_fu_589_p1));
    empty_37_fu_708_p2 <= "1" when (unsigned(empty_36_reg_943) > unsigned(ap_const_lv9_9F)) else "0";

    fm_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter5, m_axi_fm_ARREADY, or_ln49_reg_959, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln49_reg_959 = ap_const_lv1_0))) then 
            fm_blk_n_AR <= m_axi_fm_ARREADY;
        else 
            fm_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    fm_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter13, m_axi_fm_RVALID, or_ln49_reg_959_pp0_iter12_reg, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0))) then 
            fm_blk_n_R <= m_axi_fm_RVALID;
        else 
            fm_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_479_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_479_ce <= ap_const_logic_1;
        else 
            grp_fu_479_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_479_p1 <= ap_const_lv7_3(3 - 1 downto 0);

    grp_fu_548_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_548_ce <= ap_const_logic_1;
        else 
            grp_fu_548_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_548_p0 <= 
        add_ln44_fu_535_p2 when (and_ln43_reg_908(0) = '1') else 
        select_ln43_fu_528_p3;
    grp_fu_548_p1 <= ap_const_lv6_3(3 - 1 downto 0);

    grp_fu_839_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_839_ce <= ap_const_logic_1;
        else 
            grp_fu_839_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_839_p0 <= grp_fu_839_p00(2 - 1 downto 0);
    grp_fu_839_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln43_1_fu_453_p3),18));
    grp_fu_839_p1 <= ap_const_lv18_C800(16 - 1 downto 0);
    icmp_ln43_fu_405_p2 <= "1" when (indvar_flatten37_fu_174 = ap_const_lv14_285C) else "0";
    icmp_ln44_fu_429_p2 <= "1" when (indvar_flatten24_fu_166 = ap_const_lv13_D74) else "0";
    icmp_ln45_fu_441_p2 <= "1" when (w_fu_158 = ap_const_lv7_52) else "0";
    icmp_ln49_fu_764_p2 <= "1" when (unsigned(add_ln47_1_fu_755_p2) > unsigned(ap_const_lv10_13F)) else "0";
    inBuffer3x3_0_0_address0 <= inBuffer3x3_0_0_addr_reg_973_pp0_iter13_reg;
    inBuffer3x3_0_0_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_0_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_0_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_0_0_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_0_0_d1 <= ap_const_lv16_0;

    inBuffer3x3_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred541_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred541_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_0_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_0_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln45_fu_835_p1 = ap_const_lv2_0) and (trunc_ln44_fu_819_p1 = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_0_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_0_1_address0 <= inBuffer3x3_0_1_addr_reg_978_pp0_iter13_reg;
    inBuffer3x3_0_1_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_1_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_1_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_0_1_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_0_1_d1 <= ap_const_lv16_0;

    inBuffer3x3_0_1_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred535_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred535_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_1_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_1_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln45_fu_835_p1 = ap_const_lv2_1) and (trunc_ln44_fu_819_p1 = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_1_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_0_2_address0 <= inBuffer3x3_0_2_addr_reg_983_pp0_iter13_reg;
    inBuffer3x3_0_2_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_2_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_2_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_0_2_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_0_2_d1 <= ap_const_lv16_0;

    inBuffer3x3_0_2_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred549_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred549_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_2_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_2_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if ((not((trunc_ln45_fu_835_p1 = ap_const_lv2_0)) and not((trunc_ln45_fu_835_p1 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln44_fu_819_p1 = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_0_2_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_1_0_address0 <= inBuffer3x3_1_0_addr_reg_988_pp0_iter13_reg;
    inBuffer3x3_1_0_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_0_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_0_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_1_0_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_1_0_d1 <= ap_const_lv16_0;

    inBuffer3x3_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred513_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred513_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_0_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_0_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln45_fu_835_p1 = ap_const_lv2_0) and (trunc_ln44_fu_819_p1 = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_0_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_1_1_address0 <= inBuffer3x3_1_1_addr_reg_993_pp0_iter13_reg;
    inBuffer3x3_1_1_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_1_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_1_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_1_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_1_1_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_1_1_d1 <= ap_const_lv16_0;

    inBuffer3x3_1_1_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred504_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred504_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_1_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_1_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln45_fu_835_p1 = ap_const_lv2_1) and (trunc_ln44_fu_819_p1 = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_1_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_1_2_address0 <= inBuffer3x3_1_2_addr_reg_998_pp0_iter13_reg;
    inBuffer3x3_1_2_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_1_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_2_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_2_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_1_2_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_1_2_d1 <= ap_const_lv16_0;

    inBuffer3x3_1_2_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred525_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred525_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_2_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_2_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if ((not((trunc_ln45_fu_835_p1 = ap_const_lv2_0)) and not((trunc_ln45_fu_835_p1 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln44_fu_819_p1 = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_1_2_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_2_0_address0 <= inBuffer3x3_2_0_addr_reg_1003_pp0_iter13_reg;
    inBuffer3x3_2_0_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_0_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_0_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_2_0_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_2_0_d1 <= ap_const_lv16_0;

    inBuffer3x3_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred569_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred569_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_0_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_0_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if ((not((trunc_ln44_fu_819_p1 = ap_const_lv2_0)) and not((trunc_ln44_fu_819_p1 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln45_fu_835_p1 = ap_const_lv2_0) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_0_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_2_1_address0 <= inBuffer3x3_2_1_addr_reg_1008_pp0_iter13_reg;
    inBuffer3x3_2_1_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_2_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_1_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_1_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_2_1_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_2_1_d1 <= ap_const_lv16_0;

    inBuffer3x3_2_1_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred563_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred563_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_1_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_1_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if ((not((trunc_ln44_fu_819_p1 = ap_const_lv2_0)) and not((trunc_ln44_fu_819_p1 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln45_fu_835_p1 = ap_const_lv2_1) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_1_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_2_2_address0 <= inBuffer3x3_2_2_addr_reg_1013_pp0_iter13_reg;
    inBuffer3x3_2_2_address1 <= zext_ln50_4_fu_823_p1(11 - 1 downto 0);

    inBuffer3x3_2_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_2_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_2_ce1 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inBuffer3x3_2_2_d0 <= fm_addr_read_reg_1022;
    inBuffer3x3_2_2_d1 <= ap_const_lv16_0;

    inBuffer3x3_2_2_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_predicate_pred577_state15)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_predicate_pred577_state15 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_2_we0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_2_we1_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, or_ln49_reg_959_pp0_iter10_reg, trunc_ln44_fu_819_p1, trunc_ln45_fu_835_p1)
    begin
        if ((not((trunc_ln44_fu_819_p1 = ap_const_lv2_0)) and not((trunc_ln45_fu_835_p1 = ap_const_lv2_0)) and not((trunc_ln45_fu_835_p1 = ap_const_lv2_1)) and not((trunc_ln44_fu_819_p1 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (or_ln49_reg_959_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inBuffer3x3_2_2_we1 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_fm_ARADDR <= fm_addr_reg_963;
    m_axi_fm_ARBURST <= ap_const_lv2_0;
    m_axi_fm_ARCACHE <= ap_const_lv4_0;
    m_axi_fm_ARID <= ap_const_lv1_0;
    m_axi_fm_ARLEN <= ap_const_lv32_1;
    m_axi_fm_ARLOCK <= ap_const_lv2_0;
    m_axi_fm_ARPROT <= ap_const_lv3_0;
    m_axi_fm_ARQOS <= ap_const_lv4_0;
    m_axi_fm_ARREGION <= ap_const_lv4_0;
    m_axi_fm_ARSIZE <= ap_const_lv3_0;
    m_axi_fm_ARUSER <= ap_const_lv1_0;

    m_axi_fm_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter5, or_ln49_reg_959, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln49_reg_959 = ap_const_lv1_0))) then 
            m_axi_fm_ARVALID <= ap_const_logic_1;
        else 
            m_axi_fm_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_fm_AWADDR <= ap_const_lv64_0;
    m_axi_fm_AWBURST <= ap_const_lv2_0;
    m_axi_fm_AWCACHE <= ap_const_lv4_0;
    m_axi_fm_AWID <= ap_const_lv1_0;
    m_axi_fm_AWLEN <= ap_const_lv32_0;
    m_axi_fm_AWLOCK <= ap_const_lv2_0;
    m_axi_fm_AWPROT <= ap_const_lv3_0;
    m_axi_fm_AWQOS <= ap_const_lv4_0;
    m_axi_fm_AWREGION <= ap_const_lv4_0;
    m_axi_fm_AWSIZE <= ap_const_lv3_0;
    m_axi_fm_AWUSER <= ap_const_lv1_0;
    m_axi_fm_AWVALID <= ap_const_logic_0;
    m_axi_fm_BREADY <= ap_const_logic_0;

    m_axi_fm_RREADY_assign_proc : process(ap_enable_reg_pp0_iter13, or_ln49_reg_959_pp0_iter12_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln49_reg_959_pp0_iter12_reg = ap_const_lv1_0))) then 
            m_axi_fm_RREADY <= ap_const_logic_1;
        else 
            m_axi_fm_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_fm_WDATA <= ap_const_lv16_0;
    m_axi_fm_WID <= ap_const_lv1_0;
    m_axi_fm_WLAST <= ap_const_logic_0;
    m_axi_fm_WSTRB <= ap_const_lv2_0;
    m_axi_fm_WUSER <= ap_const_lv1_0;
    m_axi_fm_WVALID <= ap_const_logic_0;
    mul_ln44_fu_565_p0 <= mul_ln44_fu_565_p00(6 - 1 downto 0);
    mul_ln44_fu_565_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_1_reg_931),13));
    mul_ln44_fu_565_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln45_fu_719_p0 <= mul_ln45_fu_719_p00(7 - 1 downto 0);
    mul_ln45_fu_719_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_reg_919_pp0_iter3_reg),15));
    mul_ln45_fu_719_p1 <= ap_const_lv15_AB(9 - 1 downto 0);
    or_ln44_fu_461_p2 <= (icmp_ln44_fu_429_p2 or and_ln43_fu_447_p2);
    or_ln49_fu_770_p2 <= (icmp_ln49_fu_764_p2 or empty_37_fu_708_p2);
        p_shl4_cast_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_fu_692_p3),18));

    p_shl4_fu_692_p3 <= (empty_36_reg_943 & ap_const_lv8_0);
    p_shl5_fu_609_p3 <= (empty_36_fu_603_p2 & ap_const_lv6_0);
    select_ln43_1_fu_453_p3 <= 
        add_ln43_fu_423_p2 when (icmp_ln44_fu_429_p2(0) = '1') else 
        c_fu_170;
    select_ln43_fu_528_p3 <= 
        ap_const_lv6_0 when (icmp_ln44_reg_903(0) = '1') else 
        h_fu_162;
    select_ln44_1_fu_541_p3 <= 
        add_ln44_fu_535_p2 when (and_ln43_reg_908(0) = '1') else 
        select_ln43_fu_528_p3;
    select_ln44_2_fu_497_p3 <= 
        ap_const_lv13_1 when (icmp_ln44_fu_429_p2(0) = '1') else 
        add_ln44_1_fu_491_p2;
    select_ln44_fu_467_p3 <= 
        ap_const_lv7_0 when (or_ln44_fu_461_p2(0) = '1') else 
        w_fu_158;
        sext_ln43_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln50_fu_643_p2),8));

        sext_ln47_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln47_fu_745_p2),10));

        sext_ln49_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln47_1_fu_755_p2),18));

        sext_ln50_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_674_p3),11));

        sext_ln53_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_fu_799_p4),64));

    shl_ln_fu_782_p3 <= (add_ln53_1_fu_776_p2 & ap_const_lv1_0);
    sub_ln50_1_fu_686_p2 <= std_logic_vector(unsigned(tmp_10_fu_666_p3) - unsigned(sext_ln50_fu_682_p1));
    sub_ln50_fu_643_p2 <= std_logic_vector(unsigned(zext_ln50_fu_628_p1) - unsigned(zext_ln50_1_fu_639_p1));
    tmp2_cast_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_581_p4),9));
    tmp2_fu_581_p4 <= ((empty & empty) & ap_const_lv3_0);
        tmp3_cast_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp3_fu_593_p2),9));

    tmp3_fu_593_p2 <= std_logic_vector(unsigned(zext_ln44_fu_559_p1) + unsigned(ap_const_lv7_7F));
    tmp_10_fu_666_p3 <= (trunc_ln50_fu_662_p1 & ap_const_lv5_0);
    tmp_11_fu_674_p3 <= (add_ln50_fu_656_p2 & ap_const_lv2_0);
    tmp_12_fu_725_p4 <= mul_ln45_fu_719_p2(14 downto 9);
    tmp_7_fu_632_p3 <= (select_ln43_1_reg_913_pp0_iter3_reg & ap_const_lv1_0);
    tmp_s_fu_621_p3 <= (select_ln43_1_reg_913_pp0_iter3_reg & ap_const_lv4_0);
    trunc_ln44_fu_819_p1 <= grp_fu_548_p2(2 - 1 downto 0);
    trunc_ln45_fu_835_p1 <= grp_fu_479_p2(2 - 1 downto 0);
    trunc_ln50_fu_662_p1 <= add_ln50_fu_656_p2(6 - 1 downto 0);
    trunc_ln6_fu_799_p4 <= add_ln53_fu_794_p2(63 downto 1);
    xor_ln43_fu_435_p2 <= (icmp_ln44_fu_429_p2 xor ap_const_lv1_1);
    zext_ln43_cast_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln43),10));
    zext_ln44_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_1_reg_931),7));
    zext_ln45_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_reg_919_pp0_iter3_reg),8));
    zext_ln50_1_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_632_p3),7));
    zext_ln50_2_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_938),8));
    zext_ln50_3_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_725_p4),11));
    zext_ln50_4_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_1_reg_954_pp0_iter10_reg),64));
    zext_ln50_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_621_p3),7));
    zext_ln53_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_782_p3),64));
end behav;
