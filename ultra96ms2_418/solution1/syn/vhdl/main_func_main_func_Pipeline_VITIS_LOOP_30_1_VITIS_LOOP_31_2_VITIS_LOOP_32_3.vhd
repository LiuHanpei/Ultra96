-- ==============================================================
-- Generated by Vitis HLS v2023.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_func_main_func_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_buf3x3_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_buf3x3_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_buf3x3_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_0_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_0_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_0_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_1_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_1_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_1_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_2_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_2_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_2_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_0_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_0_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_0_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_1_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_1_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_1_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_2_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_2_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_2_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_0_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_0_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_0_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_1_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_1_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_1_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_2_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_2_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_2_2_load : IN STD_LOGIC_VECTOR (15 downto 0);
    outBuffer3x3_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    outBuffer3x3_0_ce0 : OUT STD_LOGIC;
    outBuffer3x3_0_we0 : OUT STD_LOGIC;
    outBuffer3x3_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_0_ce0 : OUT STD_LOGIC;
    inBuffer3x3_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_1_ce0 : OUT STD_LOGIC;
    inBuffer3x3_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_0_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_0_2_ce0 : OUT STD_LOGIC;
    inBuffer3x3_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_0_ce0 : OUT STD_LOGIC;
    inBuffer3x3_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_1_ce0 : OUT STD_LOGIC;
    inBuffer3x3_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_1_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_1_2_ce0 : OUT STD_LOGIC;
    inBuffer3x3_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_0_ce0 : OUT STD_LOGIC;
    inBuffer3x3_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_1_ce0 : OUT STD_LOGIC;
    inBuffer3x3_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    inBuffer3x3_2_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    inBuffer3x3_2_2_ce0 : OUT STD_LOGIC;
    inBuffer3x3_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    outBuffer3x3_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    outBuffer3x3_1_ce0 : OUT STD_LOGIC;
    outBuffer3x3_1_we0 : OUT STD_LOGIC;
    outBuffer3x3_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    outBuffer3x3_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    outBuffer3x3_2_ce0 : OUT STD_LOGIC;
    outBuffer3x3_2_we0 : OUT STD_LOGIC;
    outBuffer3x3_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of main_func_main_func_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_2580 : STD_LOGIC_VECTOR (13 downto 0) := "10010110000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv13_C80 : STD_LOGIC_VECTOR (12 downto 0) := "0110010000000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv13_56 : STD_LOGIC_VECTOR (12 downto 0) := "0000001010110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv15_AB : STD_LOGIC_VECTOR (14 downto 0) := "000000010101011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln30_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln31_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_2752_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln30_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln30_reg_2759 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_1371_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_reg_2765_pp0_iter11_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_fu_1379_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln32_1_reg_2773_pp0_iter11_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_2_fu_1462_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_reg_2778_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_60_reg_2787 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter9_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter10_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_reg_2787_pp0_iter11_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln31_fu_1500_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln31_reg_2792 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln31_reg_2792_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln32_fu_1504_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln32_reg_2805 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln32_reg_2805_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_fu_1517_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter16_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter17_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter18_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter19_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter20_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter21_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter22_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_reg_2818_pp0_iter23_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln33_1_fu_1709_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter13_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter14_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter15_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter16_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter17_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter18_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter19_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter20_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter21_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter22_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_1_reg_2832_pp0_iter23_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_2040_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_3252 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_2059_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_3257 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_3257_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_2078_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_3262 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_3262_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_3262_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_2097_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_3267 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_3267_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_3267_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_3267_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_2116_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_3272 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_3272_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_3272_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_3272_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_3272_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_2135_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3277 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3277_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3277_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3277_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3277_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3277_pp0_iter18_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_2154_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282_pp0_iter18_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_reg_3282_pp0_iter19_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_2173_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter18_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter19_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3287_pp0_iter20_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln36_5_fu_1749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln36_6_fu_1768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_9_fu_1810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_10_fu_1829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_13_fu_1872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_14_fu_1891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_17_fu_1949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_18_fu_1968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_19_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln33_2_fu_2464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_192 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal ap_loop_init : STD_LOGIC;
    signal i_fu_196 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal indvar_flatten44_fu_200 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal select_ln31_3_fu_1397_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_fu_204 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal indvar_flatten59_fu_208 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal add_ln30_1_fu_1332_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1124_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1143_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1162_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1181_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1200_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1219_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1238_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1257_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1276_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln32_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln30_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1385_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln31_4_fu_1391_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln31_1_fu_1430_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln30_fu_1423_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln31_3_fu_1449_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln30_1_fu_1436_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln31_2_fu_1443_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1469_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1469_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_1_fu_1455_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln36_11_fu_1479_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln36_11_fu_1479_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln36_11_fu_1479_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1469_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1385_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln30_fu_1511_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_1524_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_1536_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_fu_1532_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln36_1_fu_1544_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln36_fu_1548_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_39_fu_1565_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_38_fu_1558_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln33_fu_1572_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln31_fu_1590_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln31_fu_1590_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln31_fu_1590_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_40_fu_1596_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln36_cast_fu_1554_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln36_2_fu_1606_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln36_9_fu_1610_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln36_fu_1616_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_51_fu_1628_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_50_fu_1620_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln36_18_fu_1636_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln31_fu_1582_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln32_fu_1650_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln32_fu_1650_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln32_fu_1650_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_52_fu_1656_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln36_3_fu_1666_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln36_10_fu_1670_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln36_1_fu_1676_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_fu_1688_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_53_fu_1680_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln36_19_fu_1696_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln33_fu_1576_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln33_1_fu_1706_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln32_1_fu_1723_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln32_1_fu_1723_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln32_1_fu_1723_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_55_fu_1729_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln36_1_fu_1640_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln36_4_fu_1739_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_11_fu_1743_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln36_2_fu_1700_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_12_fu_1762_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln36_9_fu_1784_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln36_9_fu_1784_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln36_9_fu_1784_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_56_fu_1790_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln36_8_fu_1800_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_13_fu_1804_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_14_fu_1823_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln32_fu_1715_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln36_10_fu_1846_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln36_10_fu_1846_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln36_10_fu_1846_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_58_fu_1852_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln36_12_fu_1862_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_15_fu_1866_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_16_fu_1885_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln36_16_fu_1904_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln36_17_fu_1907_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln36_2_fu_1913_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_62_fu_1925_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_61_fu_1917_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln36_20_fu_1933_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln36_3_fu_1937_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_18_fu_1943_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_19_fu_1962_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_20_fu_1981_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1124_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1143_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1162_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_2005_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_2005_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_2028_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1181_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1200_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1219_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_2040_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1238_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1257_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1276_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_2059_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_2078_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_2097_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_2116_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_2135_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_2154_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_2173_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_2195_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_2207_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_2226_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_2238_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2482_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_57_fu_2238_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_2258_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_2270_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2491_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_59_fu_2270_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_fu_2290_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_2302_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2500_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_63_fu_2302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_2322_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_2334_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2509_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_64_fu_2334_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_2354_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_fu_2366_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2518_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_65_fu_2366_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_fu_2386_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_fu_2398_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2527_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_66_fu_2398_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_2418_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_fu_2430_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2536_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_67_fu_2430_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_fu_2447_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2545_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_68_fu_2447_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln36_8_fu_2470_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2554_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2482_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2491_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2500_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2509_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2518_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2527_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2536_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2545_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_2554_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln31_fu_1590_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln32_1_fu_1723_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln32_fu_1650_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln36_10_fu_1846_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln36_11_fu_1479_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln36_9_fu_1784_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1124_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1124_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1124_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1143_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1143_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1143_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1162_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1162_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1162_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1181_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1181_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1181_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1200_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1200_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1200_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1219_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1219_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1219_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1238_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1238_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1238_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1257_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1257_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1257_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1276_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1276_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1276_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_2005_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_2005_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_2005_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_2040_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_2040_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_2040_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_2059_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_2059_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_2059_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_2078_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_2078_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_2078_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_2097_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_2097_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_2097_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_fu_2116_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_fu_2116_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_fu_2116_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_2135_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_2135_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_2135_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_2154_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_2154_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_2154_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_2173_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_2173_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_2173_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component main_func_sparsemux_7_2_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        def : IN STD_LOGIC_VECTOR (15 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component main_func_urem_7ns_3ns_2_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_func_urem_6ns_3ns_2_10_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component main_func_mul_6ns_8ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component main_func_mul_7ns_9ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component main_func_mux_3_2_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component main_func_mac_muladd_16s_16s_29ns_29_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component main_func_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_7_2_16_1_1_U66 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "10",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_0_0_q0,
        din1 => inBuffer3x3_0_1_q0,
        din2 => inBuffer3x3_0_2_q0,
        def => grp_fu_1124_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1124_p9);

    sparsemux_7_2_16_1_1_U67 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "10",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_1_0_q0,
        din1 => inBuffer3x3_1_1_q0,
        din2 => inBuffer3x3_1_2_q0,
        def => grp_fu_1143_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1143_p9);

    sparsemux_7_2_16_1_1_U68 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "10",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_2_0_q0,
        din1 => inBuffer3x3_2_1_q0,
        din2 => inBuffer3x3_2_2_q0,
        def => grp_fu_1162_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1162_p9);

    sparsemux_7_2_16_1_1_U69 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "00",
        din1_WIDTH => 16,
        CASE2 => "01",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_0_0_q0,
        din1 => inBuffer3x3_0_1_q0,
        din2 => inBuffer3x3_0_2_q0,
        def => grp_fu_1181_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1181_p9);

    sparsemux_7_2_16_1_1_U70 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "00",
        din1_WIDTH => 16,
        CASE2 => "01",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_1_0_q0,
        din1 => inBuffer3x3_1_1_q0,
        din2 => inBuffer3x3_1_2_q0,
        def => grp_fu_1200_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1200_p9);

    sparsemux_7_2_16_1_1_U71 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "00",
        din1_WIDTH => 16,
        CASE2 => "01",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_2_0_q0,
        din1 => inBuffer3x3_2_1_q0,
        din2 => inBuffer3x3_2_2_q0,
        def => grp_fu_1219_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1219_p9);

    sparsemux_7_2_16_1_1_U72 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 16,
        CASE1 => "10",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_0_0_q0,
        din1 => inBuffer3x3_0_1_q0,
        din2 => inBuffer3x3_0_2_q0,
        def => grp_fu_1238_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1238_p9);

    sparsemux_7_2_16_1_1_U73 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 16,
        CASE1 => "10",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_1_0_q0,
        din1 => inBuffer3x3_1_1_q0,
        din2 => inBuffer3x3_1_2_q0,
        def => grp_fu_1257_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1257_p9);

    sparsemux_7_2_16_1_1_U74 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 16,
        CASE1 => "10",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => inBuffer3x3_2_0_q0,
        din1 => inBuffer3x3_2_1_q0,
        din2 => inBuffer3x3_2_2_q0,
        def => grp_fu_1276_p7,
        sel => trunc_ln32_reg_2805_pp0_iter12_reg,
        dout => grp_fu_1276_p9);

    urem_7ns_3ns_2_11_1_U75 : component main_func_urem_7ns_3ns_2_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln31_fu_1371_p3,
        din1 => grp_fu_1385_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1385_p2);

    urem_6ns_3ns_2_10_1_U76 : component main_func_urem_6ns_3ns_2_10_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1469_p0,
        din1 => grp_fu_1469_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1469_p2);

    mul_6ns_8ns_13_1_1_U77 : component main_func_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln36_11_fu_1479_p0,
        din1 => mul_ln36_11_fu_1479_p1,
        dout => mul_ln36_11_fu_1479_p2);

    mul_6ns_8ns_13_1_1_U78 : component main_func_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln31_fu_1590_p0,
        din1 => mul_ln31_fu_1590_p1,
        dout => mul_ln31_fu_1590_p2);

    mul_6ns_8ns_13_1_1_U79 : component main_func_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln32_fu_1650_p0,
        din1 => mul_ln32_fu_1650_p1,
        dout => mul_ln32_fu_1650_p2);

    mul_7ns_9ns_15_1_1_U80 : component main_func_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln32_1_fu_1723_p0,
        din1 => mul_ln32_1_fu_1723_p1,
        dout => mul_ln32_1_fu_1723_p2);

    mul_7ns_9ns_15_1_1_U81 : component main_func_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln36_9_fu_1784_p0,
        din1 => mul_ln36_9_fu_1784_p1,
        dout => mul_ln36_9_fu_1784_p2);

    mul_7ns_9ns_15_1_1_U82 : component main_func_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln36_10_fu_1846_p0,
        din1 => mul_ln36_10_fu_1846_p1,
        dout => mul_ln36_10_fu_1846_p2);

    sparsemux_7_2_16_1_1_U83 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "10",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1124_p9,
        din1 => grp_fu_1143_p9,
        din2 => grp_fu_1162_p9,
        def => tmp_3_fu_2005_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_3_fu_2005_p9);

    mux_3_2_16_1_1_U84 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_0_0_0_load,
        din1 => weight_buf3x3_0_0_1_load,
        din2 => weight_buf3x3_0_0_2_load,
        din3 => select_ln30_2_reg_2818,
        dout => tmp_41_fu_2028_p5);

    sparsemux_7_2_16_1_1_U85 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "10",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1181_p9,
        din1 => grp_fu_1200_p9,
        din2 => grp_fu_1219_p9,
        def => tmp_7_fu_2040_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_7_fu_2040_p9);

    sparsemux_7_2_16_1_1_U86 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "10",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1238_p9,
        din1 => grp_fu_1257_p9,
        din2 => grp_fu_1276_p9,
        def => tmp_10_fu_2059_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_10_fu_2059_p9);

    sparsemux_7_2_16_1_1_U87 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "00",
        din1_WIDTH => 16,
        CASE2 => "01",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1124_p9,
        din1 => grp_fu_1143_p9,
        din2 => grp_fu_1162_p9,
        def => tmp_14_fu_2078_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_14_fu_2078_p9);

    sparsemux_7_2_16_1_1_U88 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "00",
        din1_WIDTH => 16,
        CASE2 => "01",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1181_p9,
        din1 => grp_fu_1200_p9,
        din2 => grp_fu_1219_p9,
        def => tmp_18_fu_2097_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_18_fu_2097_p9);

    sparsemux_7_2_16_1_1_U89 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "00",
        din1_WIDTH => 16,
        CASE2 => "01",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1238_p9,
        din1 => grp_fu_1257_p9,
        din2 => grp_fu_1276_p9,
        def => tmp_22_fu_2116_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_22_fu_2116_p9);

    sparsemux_7_2_16_1_1_U90 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 16,
        CASE1 => "10",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1124_p9,
        din1 => grp_fu_1143_p9,
        din2 => grp_fu_1162_p9,
        def => tmp_26_fu_2135_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_26_fu_2135_p9);

    sparsemux_7_2_16_1_1_U91 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 16,
        CASE1 => "10",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1181_p9,
        din1 => grp_fu_1200_p9,
        din2 => grp_fu_1219_p9,
        def => tmp_30_fu_2154_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_30_fu_2154_p9);

    sparsemux_7_2_16_1_1_U92 : component main_func_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 16,
        CASE1 => "10",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1238_p9,
        din1 => grp_fu_1257_p9,
        din2 => grp_fu_1276_p9,
        def => tmp_34_fu_2173_p7,
        sel => trunc_ln31_reg_2792_pp0_iter12_reg,
        dout => tmp_34_fu_2173_p9);

    mux_3_2_16_1_1_U93 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_0_1_0_load,
        din1 => weight_buf3x3_0_1_1_load,
        din2 => weight_buf3x3_0_1_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter13_reg,
        dout => tmp_42_fu_2195_p5);

    mux_3_2_16_1_1_U94 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => bias_buf3x3_0_load,
        din1 => bias_buf3x3_1_load,
        din2 => bias_buf3x3_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter14_reg,
        dout => tmp_37_fu_2207_p5);

    mux_3_2_16_1_1_U95 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_0_2_0_load,
        din1 => weight_buf3x3_0_2_1_load,
        din2 => weight_buf3x3_0_2_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter14_reg,
        dout => tmp_43_fu_2226_p5);

    mux_3_2_16_1_1_U96 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_1_0_0_load,
        din1 => weight_buf3x3_1_0_1_load,
        din2 => weight_buf3x3_1_0_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter15_reg,
        dout => tmp_44_fu_2258_p5);

    mux_3_2_16_1_1_U97 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_1_1_0_load,
        din1 => weight_buf3x3_1_1_1_load,
        din2 => weight_buf3x3_1_1_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter16_reg,
        dout => tmp_45_fu_2290_p5);

    mux_3_2_16_1_1_U98 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_1_2_0_load,
        din1 => weight_buf3x3_1_2_1_load,
        din2 => weight_buf3x3_1_2_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter17_reg,
        dout => tmp_46_fu_2322_p5);

    mux_3_2_16_1_1_U99 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_2_0_0_load,
        din1 => weight_buf3x3_2_0_1_load,
        din2 => weight_buf3x3_2_0_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter18_reg,
        dout => tmp_47_fu_2354_p5);

    mux_3_2_16_1_1_U100 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_2_1_0_load,
        din1 => weight_buf3x3_2_1_1_load,
        din2 => weight_buf3x3_2_1_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter19_reg,
        dout => tmp_48_fu_2386_p5);

    mux_3_2_16_1_1_U101 : component main_func_mux_3_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => weight_buf3x3_2_2_0_load,
        din1 => weight_buf3x3_2_2_1_load,
        din2 => weight_buf3x3_2_2_2_load,
        din3 => select_ln30_2_reg_2818_pp0_iter20_reg,
        dout => tmp_49_fu_2418_p5);

    mac_muladd_16s_16s_29ns_29_4_1_U102 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_41_fu_2028_p5,
        din1 => tmp_3_fu_2005_p9,
        din2 => grp_fu_2482_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2482_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U103 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_42_fu_2195_p5,
        din1 => tmp_7_reg_3252,
        din2 => grp_fu_2491_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2491_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U104 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_43_fu_2226_p5,
        din1 => tmp_10_reg_3257_pp0_iter14_reg,
        din2 => grp_fu_2500_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2500_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U105 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_44_fu_2258_p5,
        din1 => tmp_14_reg_3262_pp0_iter15_reg,
        din2 => grp_fu_2509_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2509_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U106 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_45_fu_2290_p5,
        din1 => tmp_18_reg_3267_pp0_iter16_reg,
        din2 => grp_fu_2518_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2518_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U107 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_46_fu_2322_p5,
        din1 => tmp_22_reg_3272_pp0_iter17_reg,
        din2 => grp_fu_2527_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2527_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U108 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_47_fu_2354_p5,
        din1 => tmp_26_reg_3277_pp0_iter18_reg,
        din2 => grp_fu_2536_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2536_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U109 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_48_fu_2386_p5,
        din1 => tmp_30_reg_3282_pp0_iter19_reg,
        din2 => grp_fu_2545_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2545_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U110 : component main_func_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_49_fu_2418_p5,
        din1 => tmp_34_reg_3287_pp0_iter20_reg,
        din2 => grp_fu_2554_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_2554_p3);

    flow_control_loop_pipe_sequential_init_U : component main_func_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter23_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    c_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    c_fu_204 <= ap_const_lv2_0;
                elsif ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then 
                    c_fu_204 <= select_ln30_2_fu_1517_p3;
                end if;
            end if; 
        end if;
    end process;

    i_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    i_fu_196 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    i_fu_196 <= select_ln31_2_fu_1462_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten44_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten44_fu_200 <= ap_const_lv13_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln30_fu_1326_p2 = ap_const_lv1_0))) then 
                    indvar_flatten44_fu_200 <= select_ln31_3_fu_1397_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten59_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten59_fu_208 <= ap_const_lv14_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln30_fu_1326_p2 = ap_const_lv1_0))) then 
                    indvar_flatten59_fu_208 <= add_ln30_1_fu_1332_p2;
                end if;
            end if; 
        end if;
    end process;

    j_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_192 <= ap_const_lv7_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln30_fu_1326_p2 = ap_const_lv1_0))) then 
                    j_fu_192 <= add_ln32_1_fu_1379_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln32_1_reg_2773 <= add_ln32_1_fu_1379_p2;
                and_ln30_reg_2759 <= and_ln30_fu_1359_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln31_reg_2752 <= icmp_ln31_fu_1341_p2;
                select_ln31_reg_2765 <= select_ln31_fu_1371_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln32_1_reg_2773_pp0_iter10_reg <= add_ln32_1_reg_2773_pp0_iter9_reg;
                add_ln32_1_reg_2773_pp0_iter11_reg <= add_ln32_1_reg_2773_pp0_iter10_reg;
                add_ln32_1_reg_2773_pp0_iter2_reg <= add_ln32_1_reg_2773;
                add_ln32_1_reg_2773_pp0_iter3_reg <= add_ln32_1_reg_2773_pp0_iter2_reg;
                add_ln32_1_reg_2773_pp0_iter4_reg <= add_ln32_1_reg_2773_pp0_iter3_reg;
                add_ln32_1_reg_2773_pp0_iter5_reg <= add_ln32_1_reg_2773_pp0_iter4_reg;
                add_ln32_1_reg_2773_pp0_iter6_reg <= add_ln32_1_reg_2773_pp0_iter5_reg;
                add_ln32_1_reg_2773_pp0_iter7_reg <= add_ln32_1_reg_2773_pp0_iter6_reg;
                add_ln32_1_reg_2773_pp0_iter8_reg <= add_ln32_1_reg_2773_pp0_iter7_reg;
                add_ln32_1_reg_2773_pp0_iter9_reg <= add_ln32_1_reg_2773_pp0_iter8_reg;
                add_ln33_1_reg_2832 <= add_ln33_1_fu_1709_p2;
                add_ln33_1_reg_2832_pp0_iter13_reg <= add_ln33_1_reg_2832;
                add_ln33_1_reg_2832_pp0_iter14_reg <= add_ln33_1_reg_2832_pp0_iter13_reg;
                add_ln33_1_reg_2832_pp0_iter15_reg <= add_ln33_1_reg_2832_pp0_iter14_reg;
                add_ln33_1_reg_2832_pp0_iter16_reg <= add_ln33_1_reg_2832_pp0_iter15_reg;
                add_ln33_1_reg_2832_pp0_iter17_reg <= add_ln33_1_reg_2832_pp0_iter16_reg;
                add_ln33_1_reg_2832_pp0_iter18_reg <= add_ln33_1_reg_2832_pp0_iter17_reg;
                add_ln33_1_reg_2832_pp0_iter19_reg <= add_ln33_1_reg_2832_pp0_iter18_reg;
                add_ln33_1_reg_2832_pp0_iter20_reg <= add_ln33_1_reg_2832_pp0_iter19_reg;
                add_ln33_1_reg_2832_pp0_iter21_reg <= add_ln33_1_reg_2832_pp0_iter20_reg;
                add_ln33_1_reg_2832_pp0_iter22_reg <= add_ln33_1_reg_2832_pp0_iter21_reg;
                add_ln33_1_reg_2832_pp0_iter23_reg <= add_ln33_1_reg_2832_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln31_reg_2752_pp0_iter10_reg <= icmp_ln31_reg_2752_pp0_iter9_reg;
                icmp_ln31_reg_2752_pp0_iter11_reg <= icmp_ln31_reg_2752_pp0_iter10_reg;
                icmp_ln31_reg_2752_pp0_iter2_reg <= icmp_ln31_reg_2752;
                icmp_ln31_reg_2752_pp0_iter3_reg <= icmp_ln31_reg_2752_pp0_iter2_reg;
                icmp_ln31_reg_2752_pp0_iter4_reg <= icmp_ln31_reg_2752_pp0_iter3_reg;
                icmp_ln31_reg_2752_pp0_iter5_reg <= icmp_ln31_reg_2752_pp0_iter4_reg;
                icmp_ln31_reg_2752_pp0_iter6_reg <= icmp_ln31_reg_2752_pp0_iter5_reg;
                icmp_ln31_reg_2752_pp0_iter7_reg <= icmp_ln31_reg_2752_pp0_iter6_reg;
                icmp_ln31_reg_2752_pp0_iter8_reg <= icmp_ln31_reg_2752_pp0_iter7_reg;
                icmp_ln31_reg_2752_pp0_iter9_reg <= icmp_ln31_reg_2752_pp0_iter8_reg;
                select_ln30_2_reg_2818 <= select_ln30_2_fu_1517_p3;
                select_ln30_2_reg_2818_pp0_iter13_reg <= select_ln30_2_reg_2818;
                select_ln30_2_reg_2818_pp0_iter14_reg <= select_ln30_2_reg_2818_pp0_iter13_reg;
                select_ln30_2_reg_2818_pp0_iter15_reg <= select_ln30_2_reg_2818_pp0_iter14_reg;
                select_ln30_2_reg_2818_pp0_iter16_reg <= select_ln30_2_reg_2818_pp0_iter15_reg;
                select_ln30_2_reg_2818_pp0_iter17_reg <= select_ln30_2_reg_2818_pp0_iter16_reg;
                select_ln30_2_reg_2818_pp0_iter18_reg <= select_ln30_2_reg_2818_pp0_iter17_reg;
                select_ln30_2_reg_2818_pp0_iter19_reg <= select_ln30_2_reg_2818_pp0_iter18_reg;
                select_ln30_2_reg_2818_pp0_iter20_reg <= select_ln30_2_reg_2818_pp0_iter19_reg;
                select_ln30_2_reg_2818_pp0_iter21_reg <= select_ln30_2_reg_2818_pp0_iter20_reg;
                select_ln30_2_reg_2818_pp0_iter22_reg <= select_ln30_2_reg_2818_pp0_iter21_reg;
                select_ln30_2_reg_2818_pp0_iter23_reg <= select_ln30_2_reg_2818_pp0_iter22_reg;
                select_ln31_2_reg_2778 <= select_ln31_2_fu_1462_p3;
                select_ln31_2_reg_2778_pp0_iter10_reg <= select_ln31_2_reg_2778_pp0_iter9_reg;
                select_ln31_2_reg_2778_pp0_iter11_reg <= select_ln31_2_reg_2778_pp0_iter10_reg;
                select_ln31_2_reg_2778_pp0_iter3_reg <= select_ln31_2_reg_2778;
                select_ln31_2_reg_2778_pp0_iter4_reg <= select_ln31_2_reg_2778_pp0_iter3_reg;
                select_ln31_2_reg_2778_pp0_iter5_reg <= select_ln31_2_reg_2778_pp0_iter4_reg;
                select_ln31_2_reg_2778_pp0_iter6_reg <= select_ln31_2_reg_2778_pp0_iter5_reg;
                select_ln31_2_reg_2778_pp0_iter7_reg <= select_ln31_2_reg_2778_pp0_iter6_reg;
                select_ln31_2_reg_2778_pp0_iter8_reg <= select_ln31_2_reg_2778_pp0_iter7_reg;
                select_ln31_2_reg_2778_pp0_iter9_reg <= select_ln31_2_reg_2778_pp0_iter8_reg;
                select_ln31_reg_2765_pp0_iter10_reg <= select_ln31_reg_2765_pp0_iter9_reg;
                select_ln31_reg_2765_pp0_iter11_reg <= select_ln31_reg_2765_pp0_iter10_reg;
                select_ln31_reg_2765_pp0_iter2_reg <= select_ln31_reg_2765;
                select_ln31_reg_2765_pp0_iter3_reg <= select_ln31_reg_2765_pp0_iter2_reg;
                select_ln31_reg_2765_pp0_iter4_reg <= select_ln31_reg_2765_pp0_iter3_reg;
                select_ln31_reg_2765_pp0_iter5_reg <= select_ln31_reg_2765_pp0_iter4_reg;
                select_ln31_reg_2765_pp0_iter6_reg <= select_ln31_reg_2765_pp0_iter5_reg;
                select_ln31_reg_2765_pp0_iter7_reg <= select_ln31_reg_2765_pp0_iter6_reg;
                select_ln31_reg_2765_pp0_iter8_reg <= select_ln31_reg_2765_pp0_iter7_reg;
                select_ln31_reg_2765_pp0_iter9_reg <= select_ln31_reg_2765_pp0_iter8_reg;
                tmp_10_reg_3257 <= tmp_10_fu_2059_p9;
                tmp_10_reg_3257_pp0_iter14_reg <= tmp_10_reg_3257;
                tmp_14_reg_3262 <= tmp_14_fu_2078_p9;
                tmp_14_reg_3262_pp0_iter14_reg <= tmp_14_reg_3262;
                tmp_14_reg_3262_pp0_iter15_reg <= tmp_14_reg_3262_pp0_iter14_reg;
                tmp_18_reg_3267 <= tmp_18_fu_2097_p9;
                tmp_18_reg_3267_pp0_iter14_reg <= tmp_18_reg_3267;
                tmp_18_reg_3267_pp0_iter15_reg <= tmp_18_reg_3267_pp0_iter14_reg;
                tmp_18_reg_3267_pp0_iter16_reg <= tmp_18_reg_3267_pp0_iter15_reg;
                tmp_22_reg_3272 <= tmp_22_fu_2116_p9;
                tmp_22_reg_3272_pp0_iter14_reg <= tmp_22_reg_3272;
                tmp_22_reg_3272_pp0_iter15_reg <= tmp_22_reg_3272_pp0_iter14_reg;
                tmp_22_reg_3272_pp0_iter16_reg <= tmp_22_reg_3272_pp0_iter15_reg;
                tmp_22_reg_3272_pp0_iter17_reg <= tmp_22_reg_3272_pp0_iter16_reg;
                tmp_26_reg_3277 <= tmp_26_fu_2135_p9;
                tmp_26_reg_3277_pp0_iter14_reg <= tmp_26_reg_3277;
                tmp_26_reg_3277_pp0_iter15_reg <= tmp_26_reg_3277_pp0_iter14_reg;
                tmp_26_reg_3277_pp0_iter16_reg <= tmp_26_reg_3277_pp0_iter15_reg;
                tmp_26_reg_3277_pp0_iter17_reg <= tmp_26_reg_3277_pp0_iter16_reg;
                tmp_26_reg_3277_pp0_iter18_reg <= tmp_26_reg_3277_pp0_iter17_reg;
                tmp_30_reg_3282 <= tmp_30_fu_2154_p9;
                tmp_30_reg_3282_pp0_iter14_reg <= tmp_30_reg_3282;
                tmp_30_reg_3282_pp0_iter15_reg <= tmp_30_reg_3282_pp0_iter14_reg;
                tmp_30_reg_3282_pp0_iter16_reg <= tmp_30_reg_3282_pp0_iter15_reg;
                tmp_30_reg_3282_pp0_iter17_reg <= tmp_30_reg_3282_pp0_iter16_reg;
                tmp_30_reg_3282_pp0_iter18_reg <= tmp_30_reg_3282_pp0_iter17_reg;
                tmp_30_reg_3282_pp0_iter19_reg <= tmp_30_reg_3282_pp0_iter18_reg;
                tmp_34_reg_3287 <= tmp_34_fu_2173_p9;
                tmp_34_reg_3287_pp0_iter14_reg <= tmp_34_reg_3287;
                tmp_34_reg_3287_pp0_iter15_reg <= tmp_34_reg_3287_pp0_iter14_reg;
                tmp_34_reg_3287_pp0_iter16_reg <= tmp_34_reg_3287_pp0_iter15_reg;
                tmp_34_reg_3287_pp0_iter17_reg <= tmp_34_reg_3287_pp0_iter16_reg;
                tmp_34_reg_3287_pp0_iter18_reg <= tmp_34_reg_3287_pp0_iter17_reg;
                tmp_34_reg_3287_pp0_iter19_reg <= tmp_34_reg_3287_pp0_iter18_reg;
                tmp_34_reg_3287_pp0_iter20_reg <= tmp_34_reg_3287_pp0_iter19_reg;
                tmp_60_reg_2787 <= mul_ln36_11_fu_1479_p2(12 downto 8);
                tmp_60_reg_2787_pp0_iter10_reg <= tmp_60_reg_2787_pp0_iter9_reg;
                tmp_60_reg_2787_pp0_iter11_reg <= tmp_60_reg_2787_pp0_iter10_reg;
                tmp_60_reg_2787_pp0_iter3_reg <= tmp_60_reg_2787;
                tmp_60_reg_2787_pp0_iter4_reg <= tmp_60_reg_2787_pp0_iter3_reg;
                tmp_60_reg_2787_pp0_iter5_reg <= tmp_60_reg_2787_pp0_iter4_reg;
                tmp_60_reg_2787_pp0_iter6_reg <= tmp_60_reg_2787_pp0_iter5_reg;
                tmp_60_reg_2787_pp0_iter7_reg <= tmp_60_reg_2787_pp0_iter6_reg;
                tmp_60_reg_2787_pp0_iter8_reg <= tmp_60_reg_2787_pp0_iter7_reg;
                tmp_60_reg_2787_pp0_iter9_reg <= tmp_60_reg_2787_pp0_iter8_reg;
                tmp_7_reg_3252 <= tmp_7_fu_2040_p9;
                trunc_ln31_reg_2792 <= trunc_ln31_fu_1500_p1;
                trunc_ln31_reg_2792_pp0_iter12_reg <= trunc_ln31_reg_2792;
                trunc_ln32_reg_2805 <= trunc_ln32_fu_1504_p1;
                trunc_ln32_reg_2805_pp0_iter12_reg <= trunc_ln32_reg_2805;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln30_1_fu_1332_p2 <= std_logic_vector(unsigned(indvar_flatten59_fu_208) + unsigned(ap_const_lv14_1));
    add_ln30_fu_1511_p2 <= std_logic_vector(unsigned(c_fu_204) + unsigned(ap_const_lv2_1));
    add_ln31_1_fu_1430_p2 <= std_logic_vector(unsigned(i_fu_196) + unsigned(ap_const_lv6_1));
    add_ln31_2_fu_1443_p2 <= std_logic_vector(unsigned(select_ln30_fu_1423_p3) + unsigned(ap_const_lv6_1));
    add_ln31_3_fu_1449_p2 <= std_logic_vector(unsigned(select_ln30_fu_1423_p3) + unsigned(ap_const_lv6_2));
    add_ln31_4_fu_1391_p2 <= std_logic_vector(unsigned(indvar_flatten44_fu_200) + unsigned(ap_const_lv13_1));
    add_ln31_fu_1582_p2 <= std_logic_vector(unsigned(select_ln31_2_reg_2778_pp0_iter11_reg) + unsigned(ap_const_lv6_2));
    add_ln32_1_fu_1379_p2 <= std_logic_vector(unsigned(select_ln31_fu_1371_p3) + unsigned(ap_const_lv7_1));
    add_ln32_fu_1715_p2 <= std_logic_vector(unsigned(select_ln31_reg_2765_pp0_iter11_reg) + unsigned(ap_const_lv7_2));
    add_ln33_1_fu_1709_p2 <= std_logic_vector(unsigned(add_ln33_fu_1576_p2) + unsigned(zext_ln33_1_fu_1706_p1));
    add_ln33_fu_1576_p2 <= std_logic_vector(unsigned(tmp_38_fu_1558_p3) + unsigned(zext_ln33_fu_1572_p1));
    add_ln36_10_fu_1670_p2 <= std_logic_vector(signed(sub_ln36_cast_fu_1554_p1) + signed(zext_ln36_3_fu_1666_p1));
    add_ln36_11_fu_1743_p2 <= std_logic_vector(unsigned(sub_ln36_1_fu_1640_p2) + unsigned(zext_ln36_4_fu_1739_p1));
    add_ln36_12_fu_1762_p2 <= std_logic_vector(unsigned(sub_ln36_2_fu_1700_p2) + unsigned(zext_ln36_4_fu_1739_p1));
    add_ln36_13_fu_1804_p2 <= std_logic_vector(unsigned(sub_ln36_1_fu_1640_p2) + unsigned(zext_ln36_8_fu_1800_p1));
    add_ln36_14_fu_1823_p2 <= std_logic_vector(unsigned(sub_ln36_2_fu_1700_p2) + unsigned(zext_ln36_8_fu_1800_p1));
    add_ln36_15_fu_1866_p2 <= std_logic_vector(unsigned(sub_ln36_1_fu_1640_p2) + unsigned(zext_ln36_12_fu_1862_p1));
    add_ln36_16_fu_1885_p2 <= std_logic_vector(unsigned(sub_ln36_2_fu_1700_p2) + unsigned(zext_ln36_12_fu_1862_p1));
    add_ln36_17_fu_1907_p2 <= std_logic_vector(signed(sub_ln36_cast_fu_1554_p1) + signed(zext_ln36_16_fu_1904_p1));
    add_ln36_18_fu_1943_p2 <= std_logic_vector(unsigned(sub_ln36_3_fu_1937_p2) + unsigned(zext_ln36_4_fu_1739_p1));
    add_ln36_19_fu_1962_p2 <= std_logic_vector(unsigned(sub_ln36_3_fu_1937_p2) + unsigned(zext_ln36_8_fu_1800_p1));
    add_ln36_20_fu_1981_p2 <= std_logic_vector(unsigned(sub_ln36_3_fu_1937_p2) + unsigned(zext_ln36_12_fu_1862_p1));
    add_ln36_9_fu_1610_p2 <= std_logic_vector(signed(sub_ln36_cast_fu_1554_p1) + signed(zext_ln36_2_fu_1606_p1));
    and_ln30_fu_1359_p2 <= (xor_ln30_fu_1347_p2 and icmp_ln32_fu_1353_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln30_fu_1326_p2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln30_fu_1326_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter23_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter23_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1124_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1143_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1162_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1181_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1200_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1219_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1238_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1257_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1276_p7 <= "XXXXXXXXXXXXXXXX";
    grp_fu_1385_p1 <= ap_const_lv7_3(3 - 1 downto 0);
    grp_fu_1469_p0 <= 
        add_ln31_2_fu_1443_p2 when (and_ln30_reg_2759(0) = '1') else 
        select_ln30_fu_1423_p3;
    grp_fu_1469_p1 <= ap_const_lv6_3(3 - 1 downto 0);
    grp_fu_2482_p2 <= (tmp_37_fu_2207_p5 & ap_const_lv13_0);
    grp_fu_2491_p2 <= (tmp_57_fu_2238_p4 & ap_const_lv13_0);
    grp_fu_2500_p2 <= (tmp_59_fu_2270_p4 & ap_const_lv13_0);
    grp_fu_2509_p2 <= (tmp_63_fu_2302_p4 & ap_const_lv13_0);
    grp_fu_2518_p2 <= (tmp_64_fu_2334_p4 & ap_const_lv13_0);
    grp_fu_2527_p2 <= (tmp_65_fu_2366_p4 & ap_const_lv13_0);
    grp_fu_2536_p2 <= (tmp_66_fu_2398_p4 & ap_const_lv13_0);
    grp_fu_2545_p2 <= (tmp_67_fu_2430_p4 & ap_const_lv13_0);
    grp_fu_2554_p2 <= (tmp_68_fu_2447_p4 & ap_const_lv13_0);
    icmp_ln30_fu_1326_p2 <= "1" when (indvar_flatten59_fu_208 = ap_const_lv14_2580) else "0";
    icmp_ln31_fu_1341_p2 <= "1" when (indvar_flatten44_fu_200 = ap_const_lv13_C80) else "0";
    icmp_ln32_fu_1353_p2 <= "1" when (j_fu_192 = ap_const_lv7_50) else "0";

    inBuffer3x3_0_0_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_0_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_0_0_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_0_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_0_0_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_1_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_1_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_0_1_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_0_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_0_1_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_0_2_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_0_2_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_0_2_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_0_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_0_2_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_0_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_0_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_1_0_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_1_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_1_0_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_1_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_1_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_1_1_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_1_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_1_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_1_1_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_1_2_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_1_2_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_1_2_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_1_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_1_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_1_2_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_0_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_0_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_2_0_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_2_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_2_0_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_1_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_1_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_2_1_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_2_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_2_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_2_1_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inBuffer3x3_2_2_address0_assign_proc : process(ap_enable_reg_pp0_iter12, trunc_ln31_reg_2792, trunc_ln32_reg_2805, zext_ln36_5_fu_1749_p1, ap_block_pp0_stage0, zext_ln36_6_fu_1768_p1, zext_ln36_9_fu_1810_p1, zext_ln36_10_fu_1829_p1, zext_ln36_13_fu_1872_p1, zext_ln36_14_fu_1891_p1, zext_ln36_17_fu_1949_p1, zext_ln36_18_fu_1968_p1, zext_ln36_19_fu_1987_p1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_14_fu_1891_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_10_fu_1829_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_6_fu_1768_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_19_fu_1987_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_18_fu_1968_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_17_fu_1949_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_13_fu_1872_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_9_fu_1810_p1(11 - 1 downto 0);
            elsif (((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2))) then 
                inBuffer3x3_2_2_address0 <= zext_ln36_5_fu_1749_p1(11 - 1 downto 0);
            else 
                inBuffer3x3_2_2_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            inBuffer3x3_2_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    inBuffer3x3_2_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001, trunc_ln31_reg_2792, trunc_ln32_reg_2805)
    begin
        if ((((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_2) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_1) and (trunc_ln31_reg_2792 = ap_const_lv2_0) 
    and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln32_reg_2805 = ap_const_lv2_0) and (trunc_ln31_reg_2792 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inBuffer3x3_2_2_ce0 <= ap_const_logic_1;
        else 
            inBuffer3x3_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln31_fu_1590_p0 <= mul_ln31_fu_1590_p00(6 - 1 downto 0);
    mul_ln31_fu_1590_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_2_reg_2778_pp0_iter11_reg),13));
    mul_ln31_fu_1590_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln32_1_fu_1723_p0 <= mul_ln32_1_fu_1723_p00(7 - 1 downto 0);
    mul_ln32_1_fu_1723_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_reg_2765_pp0_iter11_reg),15));
    mul_ln32_1_fu_1723_p1 <= ap_const_lv15_AB(9 - 1 downto 0);
    mul_ln32_fu_1650_p0 <= mul_ln32_fu_1650_p00(6 - 1 downto 0);
    mul_ln32_fu_1650_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_fu_1582_p2),13));
    mul_ln32_fu_1650_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln36_10_fu_1846_p0 <= mul_ln36_10_fu_1846_p00(7 - 1 downto 0);
    mul_ln36_10_fu_1846_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln32_fu_1715_p2),15));
    mul_ln36_10_fu_1846_p1 <= ap_const_lv15_AB(9 - 1 downto 0);
    mul_ln36_11_fu_1479_p0 <= mul_ln36_11_fu_1479_p00(6 - 1 downto 0);
    mul_ln36_11_fu_1479_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_1_fu_1455_p3),13));
    mul_ln36_11_fu_1479_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln36_9_fu_1784_p0 <= mul_ln36_9_fu_1784_p00(7 - 1 downto 0);
    mul_ln36_9_fu_1784_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln32_1_reg_2773_pp0_iter11_reg),15));
    mul_ln36_9_fu_1784_p1 <= ap_const_lv15_AB(9 - 1 downto 0);
    or_ln31_fu_1365_p2 <= (icmp_ln31_fu_1341_p2 or and_ln30_fu_1359_p2);
    outBuffer3x3_0_address0 <= zext_ln33_2_fu_2464_p1(12 - 1 downto 0);

    outBuffer3x3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outBuffer3x3_0_ce0 <= ap_const_logic_1;
        else 
            outBuffer3x3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outBuffer3x3_0_d0 <= trunc_ln36_8_fu_2470_p1(28 downto 13);

    outBuffer3x3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, select_ln30_2_reg_2818_pp0_iter23_reg)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (select_ln30_2_reg_2818_pp0_iter23_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outBuffer3x3_0_we0 <= ap_const_logic_1;
        else 
            outBuffer3x3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    outBuffer3x3_1_address0 <= zext_ln33_2_fu_2464_p1(12 - 1 downto 0);

    outBuffer3x3_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outBuffer3x3_1_ce0 <= ap_const_logic_1;
        else 
            outBuffer3x3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outBuffer3x3_1_d0 <= trunc_ln36_8_fu_2470_p1(28 downto 13);

    outBuffer3x3_1_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, select_ln30_2_reg_2818_pp0_iter23_reg)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (select_ln30_2_reg_2818_pp0_iter23_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outBuffer3x3_1_we0 <= ap_const_logic_1;
        else 
            outBuffer3x3_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    outBuffer3x3_2_address0 <= zext_ln33_2_fu_2464_p1(12 - 1 downto 0);

    outBuffer3x3_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outBuffer3x3_2_ce0 <= ap_const_logic_1;
        else 
            outBuffer3x3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outBuffer3x3_2_d0 <= trunc_ln36_8_fu_2470_p1(28 downto 13);

    outBuffer3x3_2_we0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_block_pp0_stage0_11001, select_ln30_2_reg_2818_pp0_iter23_reg)
    begin
        if ((not((select_ln30_2_reg_2818_pp0_iter23_reg = ap_const_lv2_0)) and not((select_ln30_2_reg_2818_pp0_iter23_reg = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outBuffer3x3_2_we0 <= ap_const_logic_1;
        else 
            outBuffer3x3_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln30_1_fu_1436_p3 <= 
        ap_const_lv6_1 when (icmp_ln31_reg_2752(0) = '1') else 
        add_ln31_1_fu_1430_p2;
    select_ln30_2_fu_1517_p3 <= 
        add_ln30_fu_1511_p2 when (icmp_ln31_reg_2752_pp0_iter11_reg(0) = '1') else 
        c_fu_204;
    select_ln30_fu_1423_p3 <= 
        ap_const_lv6_0 when (icmp_ln31_reg_2752(0) = '1') else 
        i_fu_196;
    select_ln31_1_fu_1455_p3 <= 
        add_ln31_3_fu_1449_p2 when (and_ln30_reg_2759(0) = '1') else 
        select_ln30_1_fu_1436_p3;
    select_ln31_2_fu_1462_p3 <= 
        add_ln31_2_fu_1443_p2 when (and_ln30_reg_2759(0) = '1') else 
        select_ln30_fu_1423_p3;
    select_ln31_3_fu_1397_p3 <= 
        ap_const_lv13_1 when (icmp_ln31_fu_1341_p2(0) = '1') else 
        add_ln31_4_fu_1391_p2;
    select_ln31_fu_1371_p3 <= 
        ap_const_lv7_0 when (or_ln31_fu_1365_p2(0) = '1') else 
        j_fu_192;
        sext_ln36_18_fu_1636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_fu_1628_p3),11));

        sext_ln36_19_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_54_fu_1688_p3),11));

        sext_ln36_20_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_fu_1925_p3),11));

    sub_ln36_1_fu_1640_p2 <= std_logic_vector(unsigned(tmp_50_fu_1620_p3) - unsigned(sext_ln36_18_fu_1636_p1));
    sub_ln36_2_fu_1700_p2 <= std_logic_vector(unsigned(tmp_53_fu_1680_p3) - unsigned(sext_ln36_19_fu_1696_p1));
    sub_ln36_3_fu_1937_p2 <= std_logic_vector(unsigned(tmp_61_fu_1917_p3) - unsigned(sext_ln36_20_fu_1933_p1));
        sub_ln36_cast_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln36_fu_1548_p2),8));

    sub_ln36_fu_1548_p2 <= std_logic_vector(unsigned(zext_ln36_fu_1532_p1) - unsigned(zext_ln36_1_fu_1544_p1));
    tmp_10_fu_2059_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_14_fu_2078_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_18_fu_2097_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_22_fu_2116_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_26_fu_2135_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_30_fu_2154_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_34_fu_2173_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_35_fu_1524_p3 <= (select_ln30_2_fu_1517_p3 & ap_const_lv4_0);
    tmp_36_fu_1536_p3 <= (select_ln30_2_fu_1517_p3 & ap_const_lv1_0);
    tmp_38_fu_1558_p3 <= (select_ln31_2_reg_2778_pp0_iter11_reg & ap_const_lv6_0);
    tmp_39_fu_1565_p3 <= (select_ln31_2_reg_2778_pp0_iter11_reg & ap_const_lv4_0);
    tmp_3_fu_2005_p7 <= "XXXXXXXXXXXXXXXX";
    tmp_40_fu_1596_p4 <= mul_ln31_fu_1590_p2(12 downto 8);
    tmp_50_fu_1620_p3 <= (trunc_ln36_fu_1616_p1 & ap_const_lv5_0);
    tmp_51_fu_1628_p3 <= (add_ln36_9_fu_1610_p2 & ap_const_lv2_0);
    tmp_52_fu_1656_p4 <= mul_ln32_fu_1650_p2(12 downto 8);
    tmp_53_fu_1680_p3 <= (trunc_ln36_1_fu_1676_p1 & ap_const_lv5_0);
    tmp_54_fu_1688_p3 <= (add_ln36_10_fu_1670_p2 & ap_const_lv2_0);
    tmp_55_fu_1729_p4 <= mul_ln32_1_fu_1723_p2(14 downto 9);
    tmp_56_fu_1790_p4 <= mul_ln36_9_fu_1784_p2(14 downto 9);
    tmp_57_fu_2238_p1 <= grp_fu_2482_p3;
    tmp_57_fu_2238_p4 <= tmp_57_fu_2238_p1(28 downto 13);
    tmp_58_fu_1852_p4 <= mul_ln36_10_fu_1846_p2(14 downto 9);
    tmp_59_fu_2270_p1 <= grp_fu_2491_p3;
    tmp_59_fu_2270_p4 <= tmp_59_fu_2270_p1(28 downto 13);
    tmp_61_fu_1917_p3 <= (trunc_ln36_2_fu_1913_p1 & ap_const_lv5_0);
    tmp_62_fu_1925_p3 <= (add_ln36_17_fu_1907_p2 & ap_const_lv2_0);
    tmp_63_fu_2302_p1 <= grp_fu_2500_p3;
    tmp_63_fu_2302_p4 <= tmp_63_fu_2302_p1(28 downto 13);
    tmp_64_fu_2334_p1 <= grp_fu_2509_p3;
    tmp_64_fu_2334_p4 <= tmp_64_fu_2334_p1(28 downto 13);
    tmp_65_fu_2366_p1 <= grp_fu_2518_p3;
    tmp_65_fu_2366_p4 <= tmp_65_fu_2366_p1(28 downto 13);
    tmp_66_fu_2398_p1 <= grp_fu_2527_p3;
    tmp_66_fu_2398_p4 <= tmp_66_fu_2398_p1(28 downto 13);
    tmp_67_fu_2430_p1 <= grp_fu_2536_p3;
    tmp_67_fu_2430_p4 <= tmp_67_fu_2430_p1(28 downto 13);
    tmp_68_fu_2447_p1 <= grp_fu_2545_p3;
    tmp_68_fu_2447_p4 <= tmp_68_fu_2447_p1(28 downto 13);
    tmp_7_fu_2040_p7 <= "XXXXXXXXXXXXXXXX";
    trunc_ln31_fu_1500_p1 <= grp_fu_1469_p2(2 - 1 downto 0);
    trunc_ln32_fu_1504_p1 <= grp_fu_1385_p2(2 - 1 downto 0);
    trunc_ln36_1_fu_1676_p1 <= add_ln36_10_fu_1670_p2(6 - 1 downto 0);
    trunc_ln36_2_fu_1913_p1 <= add_ln36_17_fu_1907_p2(6 - 1 downto 0);
    trunc_ln36_8_fu_2470_p1 <= grp_fu_2554_p3;
    trunc_ln36_fu_1616_p1 <= add_ln36_9_fu_1610_p2(6 - 1 downto 0);
    xor_ln30_fu_1347_p2 <= (icmp_ln31_fu_1341_p2 xor ap_const_lv1_1);
    zext_ln33_1_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_reg_2765_pp0_iter11_reg),12));
    zext_ln33_2_fu_2464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_1_reg_2832_pp0_iter23_reg),64));
    zext_ln33_fu_1572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_1565_p3),12));
    zext_ln36_10_fu_1829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_14_fu_1823_p2),64));
    zext_ln36_12_fu_1862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1852_p4),11));
    zext_ln36_13_fu_1872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_15_fu_1866_p2),64));
    zext_ln36_14_fu_1891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_16_fu_1885_p2),64));
    zext_ln36_16_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_reg_2787_pp0_iter11_reg),8));
    zext_ln36_17_fu_1949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_18_fu_1943_p2),64));
    zext_ln36_18_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_19_fu_1962_p2),64));
    zext_ln36_19_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_20_fu_1981_p2),64));
    zext_ln36_1_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_1536_p3),7));
    zext_ln36_2_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_1596_p4),8));
    zext_ln36_3_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_1656_p4),8));
    zext_ln36_4_fu_1739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_1729_p4),11));
    zext_ln36_5_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_11_fu_1743_p2),64));
    zext_ln36_6_fu_1768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_12_fu_1762_p2),64));
    zext_ln36_8_fu_1800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_1790_p4),11));
    zext_ln36_9_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_13_fu_1804_p2),64));
    zext_ln36_fu_1532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1524_p3),7));
end behav;
