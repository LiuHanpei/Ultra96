-- ==============================================================
-- Generated by Vitis HLS v2023.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_func_main_func_Pipeline_VITIS_LOOP_17_1_VITIS_LOOP_18_2_VITIS_LOOP_19_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_wt_AWVALID : OUT STD_LOGIC;
    m_axi_wt_AWREADY : IN STD_LOGIC;
    m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_WVALID : OUT STD_LOGIC;
    m_axi_wt_WREADY : IN STD_LOGIC;
    m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_WLAST : OUT STD_LOGIC;
    m_axi_wt_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_ARVALID : OUT STD_LOGIC;
    m_axi_wt_ARREADY : IN STD_LOGIC;
    m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_RVALID : IN STD_LOGIC;
    m_axi_wt_RREADY : OUT STD_LOGIC;
    m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_wt_RLAST : IN STD_LOGIC;
    m_axi_wt_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
    m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BVALID : IN STD_LOGIC;
    m_axi_wt_BREADY : OUT STD_LOGIC;
    m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln17_5 : IN STD_LOGIC_VECTOR (62 downto 0);
    weight_buf3x3_0_0_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_0_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_0_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_0_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_0_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_0_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_1_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_1_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_1_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_1_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_1_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_1_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_2_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_2_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_2_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_2_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_0_2_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_0_2_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_0_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_0_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_0_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_0_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_0_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_0_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_1_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_1_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_1_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_1_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_1_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_1_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_2_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_2_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_2_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_2_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_1_2_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_1_2_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_0_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_0_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_0_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_0_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_0_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_0_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_1_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_1_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_1_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_1_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_1_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_1_2_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_2_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_2_0_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_2_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_2_1_ap_vld : OUT STD_LOGIC;
    weight_buf3x3_2_2_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weight_buf3x3_2_2_2_ap_vld : OUT STD_LOGIC );
end;


architecture behav of main_func_main_func_Pipeline_VITIS_LOOP_17_1_VITIS_LOOP_18_2_VITIS_LOOP_19_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln17_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal wt_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln17_1_fu_243_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln17_1_reg_529 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln18_fu_263_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln18_reg_533 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln18_1_fu_271_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln18_1_reg_537 : STD_LOGIC_VECTOR (1 downto 0);
    signal kw_fu_112 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln19_fu_279_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_kw_load : STD_LOGIC_VECTOR (1 downto 0);
    signal kh_fu_116 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sig_allocacmp_kh_load : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_120 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln18_2_fu_291_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (3 downto 0);
    signal f_fu_124 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sig_allocacmp_f_load : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten10_fu_128 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln17_1_fu_184_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvar_flatten10_load : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln18_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln17_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln17_fu_205_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln17_fu_217_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln17_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln18_fu_251_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln18_1_fu_285_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_func_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component main_func_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    f_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln17_fu_178_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    f_fu_124 <= select_ln17_1_fu_243_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    f_fu_124 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten10_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln17_fu_178_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten10_fu_128 <= add_ln17_1_fu_184_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten10_fu_128 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln17_fu_178_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_120 <= select_ln18_2_fu_291_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_120 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    kh_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln17_fu_178_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    kh_fu_116 <= select_ln18_1_fu_271_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    kh_fu_116 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    kw_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln17_fu_178_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    kw_fu_112 <= add_ln19_fu_279_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    kw_fu_112 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln17_1_reg_529 <= select_ln17_1_fu_243_p3;
                select_ln18_1_reg_537 <= select_ln18_1_fu_271_p3;
                select_ln18_reg_533 <= select_ln18_fu_263_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln17_1_fu_184_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten10_load) + unsigned(ap_const_lv5_1));
    add_ln17_fu_205_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_f_load) + unsigned(ap_const_lv2_1));
    add_ln18_1_fu_285_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv4_1));
    add_ln18_fu_251_p2 <= std_logic_vector(unsigned(select_ln17_fu_217_p3) + unsigned(ap_const_lv2_1));
    add_ln19_fu_279_p2 <= std_logic_vector(unsigned(select_ln18_fu_263_p3) + unsigned(ap_const_lv2_1));
    and_ln17_fu_237_p2 <= (xor_ln17_fu_225_p2 and icmp_ln19_fu_231_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(m_axi_wt_RVALID)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (m_axi_wt_RVALID = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln17_fu_178_p2)
    begin
        if (((icmp_ln17_fu_178_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_f_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, f_fu_124)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_f_load <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_f_load <= f_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten10_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten10_fu_128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten10_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvar_flatten10_load <= indvar_flatten10_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_120)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_120;
        end if; 
    end process;


    ap_sig_allocacmp_kh_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, kh_fu_116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_kh_load <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_kh_load <= kh_fu_116;
        end if; 
    end process;


    ap_sig_allocacmp_kw_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, kw_fu_112, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_kw_load <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_kw_load <= kw_fu_112;
        end if; 
    end process;

    icmp_ln17_fu_178_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten10_load = ap_const_lv5_1B) else "0";
    icmp_ln18_fu_211_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv4_9) else "0";
    icmp_ln19_fu_231_p2 <= "1" when (ap_sig_allocacmp_kw_load = ap_const_lv2_3) else "0";
    m_axi_wt_ARADDR <= ap_const_lv64_0;
    m_axi_wt_ARBURST <= ap_const_lv2_0;
    m_axi_wt_ARCACHE <= ap_const_lv4_0;
    m_axi_wt_ARID <= ap_const_lv1_0;
    m_axi_wt_ARLEN <= ap_const_lv32_0;
    m_axi_wt_ARLOCK <= ap_const_lv2_0;
    m_axi_wt_ARPROT <= ap_const_lv3_0;
    m_axi_wt_ARQOS <= ap_const_lv4_0;
    m_axi_wt_ARREGION <= ap_const_lv4_0;
    m_axi_wt_ARSIZE <= ap_const_lv3_0;
    m_axi_wt_ARUSER <= ap_const_lv1_0;
    m_axi_wt_ARVALID <= ap_const_logic_0;
    m_axi_wt_AWADDR <= ap_const_lv64_0;
    m_axi_wt_AWBURST <= ap_const_lv2_0;
    m_axi_wt_AWCACHE <= ap_const_lv4_0;
    m_axi_wt_AWID <= ap_const_lv1_0;
    m_axi_wt_AWLEN <= ap_const_lv32_0;
    m_axi_wt_AWLOCK <= ap_const_lv2_0;
    m_axi_wt_AWPROT <= ap_const_lv3_0;
    m_axi_wt_AWQOS <= ap_const_lv4_0;
    m_axi_wt_AWREGION <= ap_const_lv4_0;
    m_axi_wt_AWSIZE <= ap_const_lv3_0;
    m_axi_wt_AWUSER <= ap_const_lv1_0;
    m_axi_wt_AWVALID <= ap_const_logic_0;
    m_axi_wt_BREADY <= ap_const_logic_0;

    m_axi_wt_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_wt_RREADY <= ap_const_logic_1;
        else 
            m_axi_wt_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_wt_WDATA <= ap_const_lv16_0;
    m_axi_wt_WID <= ap_const_lv1_0;
    m_axi_wt_WLAST <= ap_const_logic_0;
    m_axi_wt_WSTRB <= ap_const_lv2_0;
    m_axi_wt_WUSER <= ap_const_lv1_0;
    m_axi_wt_WVALID <= ap_const_logic_0;
    or_ln18_fu_257_p2 <= (icmp_ln18_fu_211_p2 or and_ln17_fu_237_p2);
    select_ln17_1_fu_243_p3 <= 
        add_ln17_fu_205_p2 when (icmp_ln18_fu_211_p2(0) = '1') else 
        ap_sig_allocacmp_f_load;
    select_ln17_fu_217_p3 <= 
        ap_const_lv2_0 when (icmp_ln18_fu_211_p2(0) = '1') else 
        ap_sig_allocacmp_kh_load;
    select_ln18_1_fu_271_p3 <= 
        add_ln18_fu_251_p2 when (and_ln17_fu_237_p2(0) = '1') else 
        select_ln17_fu_217_p3;
    select_ln18_2_fu_291_p3 <= 
        ap_const_lv4_1 when (icmp_ln18_fu_211_p2(0) = '1') else 
        add_ln18_1_fu_285_p2;
    select_ln18_fu_263_p3 <= 
        ap_const_lv2_0 when (or_ln18_fu_257_p2(0) = '1') else 
        ap_sig_allocacmp_kw_load;
    weight_buf3x3_0_0_0 <= m_axi_wt_RDATA;

    weight_buf3x3_0_0_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln18_reg_533 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_0_0_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_0_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_0_1 <= m_axi_wt_RDATA;

    weight_buf3x3_0_0_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln18_reg_533 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_0_0_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_0_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_0_2 <= m_axi_wt_RDATA;

    weight_buf3x3_0_0_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln18_reg_533 = ap_const_lv2_0))) then 
            weight_buf3x3_0_0_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_0_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_1_0 <= m_axi_wt_RDATA;

    weight_buf3x3_0_1_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln18_reg_533 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_0_1_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_1_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_1_1 <= m_axi_wt_RDATA;

    weight_buf3x3_0_1_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln18_reg_533 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_0_1_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_1_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_1_2 <= m_axi_wt_RDATA;

    weight_buf3x3_0_1_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln18_reg_533 = ap_const_lv2_1))) then 
            weight_buf3x3_0_1_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_1_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_2_0 <= m_axi_wt_RDATA;

    weight_buf3x3_0_2_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_0_2_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_2_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_2_1 <= m_axi_wt_RDATA;

    weight_buf3x3_0_2_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_0_2_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_2_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_0_2_2 <= m_axi_wt_RDATA;

    weight_buf3x3_0_2_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_0))) then 
            weight_buf3x3_0_2_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_0_2_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_0_0 <= m_axi_wt_RDATA;

    weight_buf3x3_1_0_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln18_reg_533 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_1_0_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_0_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_0_1 <= m_axi_wt_RDATA;

    weight_buf3x3_1_0_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln18_reg_533 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_1_0_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_0_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_0_2 <= m_axi_wt_RDATA;

    weight_buf3x3_1_0_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln18_reg_533 = ap_const_lv2_0))) then 
            weight_buf3x3_1_0_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_0_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_1_0 <= m_axi_wt_RDATA;

    weight_buf3x3_1_1_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln18_reg_533 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_1_1_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_1_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_1_1 <= m_axi_wt_RDATA;

    weight_buf3x3_1_1_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln18_reg_533 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_1_1_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_1_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_1_2 <= m_axi_wt_RDATA;

    weight_buf3x3_1_1_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln18_reg_533 = ap_const_lv2_1))) then 
            weight_buf3x3_1_1_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_1_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_2_0 <= m_axi_wt_RDATA;

    weight_buf3x3_1_2_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_1_2_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_2_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_2_1 <= m_axi_wt_RDATA;

    weight_buf3x3_1_2_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_1_2_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_2_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_1_2_2 <= m_axi_wt_RDATA;

    weight_buf3x3_1_2_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_1_reg_537 = ap_const_lv2_1))) then 
            weight_buf3x3_1_2_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_1_2_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_0_0 <= m_axi_wt_RDATA;

    weight_buf3x3_2_0_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_reg_533 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_2_0_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_0_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_0_1 <= m_axi_wt_RDATA;

    weight_buf3x3_2_0_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_reg_533 = ap_const_lv2_0) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_2_0_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_0_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_0_2 <= m_axi_wt_RDATA;

    weight_buf3x3_2_0_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_reg_533 = ap_const_lv2_0))) then 
            weight_buf3x3_2_0_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_0_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_1_0 <= m_axi_wt_RDATA;

    weight_buf3x3_2_1_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_reg_533 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_2_1_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_1_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_1_1 <= m_axi_wt_RDATA;

    weight_buf3x3_2_1_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_reg_533 = ap_const_lv2_1) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_2_1_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_1_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_1_2 <= m_axi_wt_RDATA;

    weight_buf3x3_2_1_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln18_reg_533 = ap_const_lv2_1))) then 
            weight_buf3x3_2_1_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_1_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_2_0 <= m_axi_wt_RDATA;

    weight_buf3x3_2_2_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln17_1_reg_529 = ap_const_lv2_0))) then 
            weight_buf3x3_2_2_0_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_2_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_2_1 <= m_axi_wt_RDATA;

    weight_buf3x3_2_2_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln17_1_reg_529 = ap_const_lv2_1))) then 
            weight_buf3x3_2_2_1_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_2_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weight_buf3x3_2_2_2 <= m_axi_wt_RDATA;

    weight_buf3x3_2_2_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, select_ln17_1_reg_529, select_ln18_reg_533, select_ln18_1_reg_537)
    begin
        if ((not((select_ln18_1_reg_537 = ap_const_lv2_1)) and not((select_ln18_reg_533 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_1)) and not((select_ln17_1_reg_529 = ap_const_lv2_0)) and not((select_ln18_reg_533 = ap_const_lv2_0)) and not((select_ln18_1_reg_537 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weight_buf3x3_2_2_2_ap_vld <= ap_const_logic_1;
        else 
            weight_buf3x3_2_2_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    wt_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_wt_RVALID, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            wt_blk_n_R <= m_axi_wt_RVALID;
        else 
            wt_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln17_fu_225_p2 <= (icmp_ln18_fu_211_p2 xor ap_const_lv1_1);
end behav;
